// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-hlr-other-usr.proto

#include "net-x-msg-im-hlr-other-usr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImHlrOtherUsrInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrOtherUsrInfoQueryReq>
      _instance;
} _XmsgImHlrOtherUsrInfoQueryReq_default_instance_;
class XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse>
      _instance;
} _XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse_default_instance_;
class XmsgImHlrOtherUsrInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrOtherUsrInfoQueryRsp>
      _instance;
} _XmsgImHlrOtherUsrInfoQueryRsp_default_instance_;
class XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse>
      _instance;
} _XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrOtherUsrInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrOtherUsrInfo>
      _instance;
} _XmsgImHlrOtherUsrInfo_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto {
void InitDefaultsXmsgImHlrOtherUsrInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrOtherUsrInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImHlrOtherUsrInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrOtherUsrInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrOtherUsrInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrOtherUsrInfoQueryReqImpl);
}

void InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfo();
  {
    void* ptr = &::_XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse();
  }
  ::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrOtherUsrInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrOtherUsrInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImHlrOtherUsrInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrOtherUsrInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrOtherUsrInfoQueryRspImpl);
}

void InitDefaultsXmsgImHlrOtherUsrInfo_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse();
  }
  ::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrOtherUsrInfo_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrOtherUsrInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrOtherUsrInfo_default_instance_;
    new (ptr) ::XmsgImHlrOtherUsrInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrOtherUsrInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrOtherUsrInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrOtherUsrInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfoQueryRsp, usrinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrOtherUsrInfo, info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgImHlrOtherUsrInfoQueryReq)},
  { 6, 13, sizeof(::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse)},
  { 15, -1, sizeof(::XmsgImHlrOtherUsrInfoQueryRsp)},
  { 21, 28, sizeof(::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse)},
  { 30, -1, sizeof(::XmsgImHlrOtherUsrInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrOtherUsrInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrOtherUsrInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrOtherUsrInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-im-hlr-other-usr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n net-x-msg-im-hlr-other-usr.proto\",\n\035Xm"
      "sgImHlrOtherUsrInfoQueryReq\022\013\n\003cgt\030\001 \003(\t"
      "\"\245\001\n\035XmsgImHlrOtherUsrInfoQueryRsp\022<\n\007us"
      "rInfo\030\001 \003(\0132+.XmsgImHlrOtherUsrInfoQuery"
      "Rsp.UsrInfoEntry\032F\n\014UsrInfoEntry\022\013\n\003key\030"
      "\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.XmsgImHlrOtherUsr"
      "Info:\0028\001\"t\n\025XmsgImHlrOtherUsrInfo\022.\n\004inf"
      "o\030\001 \003(\0132 .XmsgImHlrOtherUsrInfo.InfoEntr"
      "y\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001B\037\n\010x.msg.pbB\023XmsgImHlrOtherUsrPbb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-im-hlr-other-usr.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto

// ===================================================================

void XmsgImHlrOtherUsrInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrOtherUsrInfoQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrOtherUsrInfoQueryReq::XmsgImHlrOtherUsrInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrOtherUsrInfoQueryReq)
}
XmsgImHlrOtherUsrInfoQueryReq::XmsgImHlrOtherUsrInfoQueryReq(const XmsgImHlrOtherUsrInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrOtherUsrInfoQueryReq)
}

void XmsgImHlrOtherUsrInfoQueryReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrOtherUsrInfoQueryReq::~XmsgImHlrOtherUsrInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrOtherUsrInfoQueryReq)
  SharedDtor();
}

void XmsgImHlrOtherUsrInfoQueryReq::SharedDtor() {
}

void XmsgImHlrOtherUsrInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrOtherUsrInfoQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrOtherUsrInfoQueryReq& XmsgImHlrOtherUsrInfoQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfoQueryReq();
  return *internal_default_instance();
}

XmsgImHlrOtherUsrInfoQueryReq* XmsgImHlrOtherUsrInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrOtherUsrInfoQueryReq* n = new XmsgImHlrOtherUsrInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrOtherUsrInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrOtherUsrInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrOtherUsrInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrOtherUsrInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrOtherUsrInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrOtherUsrInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrOtherUsrInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImHlrOtherUsrInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrOtherUsrInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrOtherUsrInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrOtherUsrInfoQueryReq)
}

::google::protobuf::uint8* XmsgImHlrOtherUsrInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrOtherUsrInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrOtherUsrInfoQueryReq.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrOtherUsrInfoQueryReq)
  return target;
}

size_t XmsgImHlrOtherUsrInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrOtherUsrInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrOtherUsrInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrOtherUsrInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrOtherUsrInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrOtherUsrInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrOtherUsrInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrOtherUsrInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrOtherUsrInfoQueryReq::MergeFrom(const XmsgImHlrOtherUsrInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrOtherUsrInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgImHlrOtherUsrInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrOtherUsrInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrOtherUsrInfoQueryReq::CopyFrom(const XmsgImHlrOtherUsrInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrOtherUsrInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrOtherUsrInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImHlrOtherUsrInfoQueryReq::Swap(XmsgImHlrOtherUsrInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrOtherUsrInfoQueryReq::InternalSwap(XmsgImHlrOtherUsrInfoQueryReq* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrOtherUsrInfoQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse() {}
XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::MergeFrom(const XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[1];
}
void XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrOtherUsrInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrOtherUsrInfoQueryRsp::kUsrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrOtherUsrInfoQueryRsp::XmsgImHlrOtherUsrInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrOtherUsrInfoQueryRsp)
}
XmsgImHlrOtherUsrInfoQueryRsp::XmsgImHlrOtherUsrInfoQueryRsp(const XmsgImHlrOtherUsrInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrinfo_.MergeFrom(from.usrinfo_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrOtherUsrInfoQueryRsp)
}

void XmsgImHlrOtherUsrInfoQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrOtherUsrInfoQueryRsp::~XmsgImHlrOtherUsrInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrOtherUsrInfoQueryRsp)
  SharedDtor();
}

void XmsgImHlrOtherUsrInfoQueryRsp::SharedDtor() {
}

void XmsgImHlrOtherUsrInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrOtherUsrInfoQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrOtherUsrInfoQueryRsp& XmsgImHlrOtherUsrInfoQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImHlrOtherUsrInfoQueryRsp* XmsgImHlrOtherUsrInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrOtherUsrInfoQueryRsp* n = new XmsgImHlrOtherUsrInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrOtherUsrInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrOtherUsrInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrinfo_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrOtherUsrInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrOtherUsrInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .XmsgImHlrOtherUsrInfo> usrInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse,
              ::std::string, ::XmsgImHlrOtherUsrInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo > > parser(&usrinfo_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrOtherUsrInfoQueryRsp.UsrInfoEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrOtherUsrInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrOtherUsrInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImHlrOtherUsrInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrOtherUsrInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgImHlrOtherUsrInfo> usrInfo = 1;
  if (!this->usrinfo().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfoQueryRsp.UsrInfoEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->usrinfo().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrinfo().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_iterator
          it = this->usrinfo().begin();
          it != this->usrinfo().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrinfo_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_iterator
          it = this->usrinfo().begin();
          it != this->usrinfo().end(); ++it) {
        entry.reset(usrinfo_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrOtherUsrInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImHlrOtherUsrInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrOtherUsrInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .XmsgImHlrOtherUsrInfo> usrInfo = 1;
  if (!this->usrinfo().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfoQueryRsp.UsrInfoEntry.key");
      }
    };

    if (deterministic &&
        this->usrinfo().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->usrinfo().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_iterator
          it = this->usrinfo().begin();
          it != this->usrinfo().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(usrinfo_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_iterator
          it = this->usrinfo().begin();
          it != this->usrinfo().end(); ++it) {
        entry.reset(usrinfo_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrOtherUsrInfoQueryRsp)
  return target;
}

size_t XmsgImHlrOtherUsrInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrOtherUsrInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .XmsgImHlrOtherUsrInfo> usrInfo = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usrinfo_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfoQueryRsp_UsrInfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::XmsgImHlrOtherUsrInfo >::const_iterator
        it = this->usrinfo().begin();
        it != this->usrinfo().end(); ++it) {
      entry.reset(usrinfo_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrOtherUsrInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrOtherUsrInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrOtherUsrInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrOtherUsrInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrOtherUsrInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrOtherUsrInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrOtherUsrInfoQueryRsp::MergeFrom(const XmsgImHlrOtherUsrInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrOtherUsrInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usrinfo_.MergeFrom(from.usrinfo_);
}

void XmsgImHlrOtherUsrInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrOtherUsrInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrOtherUsrInfoQueryRsp::CopyFrom(const XmsgImHlrOtherUsrInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrOtherUsrInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrOtherUsrInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrOtherUsrInfoQueryRsp::Swap(XmsgImHlrOtherUsrInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrOtherUsrInfoQueryRsp::InternalSwap(XmsgImHlrOtherUsrInfoQueryRsp* other) {
  using std::swap;
  usrinfo_.Swap(&other->usrinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrOtherUsrInfoQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse() {}
XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::MergeFrom(const XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[3];
}
void XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrOtherUsrInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrOtherUsrInfo::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrOtherUsrInfo::XmsgImHlrOtherUsrInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrOtherUsrInfo)
}
XmsgImHlrOtherUsrInfo::XmsgImHlrOtherUsrInfo(const XmsgImHlrOtherUsrInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrOtherUsrInfo)
}

void XmsgImHlrOtherUsrInfo::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrOtherUsrInfo::~XmsgImHlrOtherUsrInfo() {
  // @@protoc_insertion_point(destructor:XmsgImHlrOtherUsrInfo)
  SharedDtor();
}

void XmsgImHlrOtherUsrInfo::SharedDtor() {
}

void XmsgImHlrOtherUsrInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrOtherUsrInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrOtherUsrInfo& XmsgImHlrOtherUsrInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::InitDefaultsXmsgImHlrOtherUsrInfo();
  return *internal_default_instance();
}

XmsgImHlrOtherUsrInfo* XmsgImHlrOtherUsrInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrOtherUsrInfo* n = new XmsgImHlrOtherUsrInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrOtherUsrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrOtherUsrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrOtherUsrInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrOtherUsrInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrOtherUsrInfo.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrOtherUsrInfo.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrOtherUsrInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrOtherUsrInfo)
  return false;
#undef DO_
}

void XmsgImHlrOtherUsrInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrOtherUsrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfo.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrOtherUsrInfo)
}

::google::protobuf::uint8* XmsgImHlrOtherUsrInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrOtherUsrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrOtherUsrInfo.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrOtherUsrInfo)
  return target;
}

size_t XmsgImHlrOtherUsrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrOtherUsrInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrOtherUsrInfo_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrOtherUsrInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrOtherUsrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrOtherUsrInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrOtherUsrInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrOtherUsrInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrOtherUsrInfo)
    MergeFrom(*source);
  }
}

void XmsgImHlrOtherUsrInfo::MergeFrom(const XmsgImHlrOtherUsrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrOtherUsrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
}

void XmsgImHlrOtherUsrInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrOtherUsrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrOtherUsrInfo::CopyFrom(const XmsgImHlrOtherUsrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrOtherUsrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrOtherUsrInfo::IsInitialized() const {
  return true;
}

void XmsgImHlrOtherUsrInfo::Swap(XmsgImHlrOtherUsrInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrOtherUsrInfo::InternalSwap(XmsgImHlrOtherUsrInfo* other) {
  using std::swap;
  info_.Swap(&other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrOtherUsrInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dother_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
