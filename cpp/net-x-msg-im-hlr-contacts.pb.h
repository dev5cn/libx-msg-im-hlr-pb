// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-hlr-contacts.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[29];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddDirectlyReqImpl();
void InitDefaultsXmsgImHlrContractsAddDirectlyReq();
void InitDefaultsXmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddDirectlyRspImpl();
void InitDefaultsXmsgImHlrContractsAddDirectlyRsp();
void InitDefaultsXmsgImHlrContractsAddReqImpl();
void InitDefaultsXmsgImHlrContractsAddReq();
void InitDefaultsXmsgImHlrContractsAddRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddRspImpl();
void InitDefaultsXmsgImHlrContractsAddRsp();
void InitDefaultsXmsgImHlrContractsAddNotice_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddNotice_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddNoticeImpl();
void InitDefaultsXmsgImHlrContractsAddNotice();
void InitDefaultsXmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddReplyReqImpl();
void InitDefaultsXmsgImHlrContractsAddReplyReq();
void InitDefaultsXmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddReplyRspImpl();
void InitDefaultsXmsgImHlrContractsAddReplyRsp();
void InitDefaultsXmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsAddReplyNoticeImpl();
void InitDefaultsXmsgImHlrContractsAddReplyNotice();
void InitDefaultsXmsgImHlrContractsDelReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsDelReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsDelReqImpl();
void InitDefaultsXmsgImHlrContractsDelReq();
void InitDefaultsXmsgImHlrContractsDelRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsDelRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsDelRspImpl();
void InitDefaultsXmsgImHlrContractsDelRsp();
void InitDefaultsXmsgImHlrContractsDelNoticeImpl();
void InitDefaultsXmsgImHlrContractsDelNotice();
void InitDefaultsXmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsUpdateInfoReqImpl();
void InitDefaultsXmsgImHlrContractsUpdateInfoReq();
void InitDefaultsXmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsUpdateInfoRspImpl();
void InitDefaultsXmsgImHlrContractsUpdateInfoRsp();
void InitDefaultsXmsgImHlrContractsSearchReq_HintEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsSearchReq_HintEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsSearchReqImpl();
void InitDefaultsXmsgImHlrContractsSearchReq();
void InitDefaultsXmsgImHlrContractsSearchRspImpl();
void InitDefaultsXmsgImHlrContractsSearchRsp();
void InitDefaultsXmsgImHlrContractsSearchRst_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrContractsSearchRst_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrContractsSearchRstImpl();
void InitDefaultsXmsgImHlrContractsSearchRst();
inline void InitDefaults() {
  InitDefaultsXmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddDirectlyReq();
  InitDefaultsXmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddDirectlyRsp();
  InitDefaultsXmsgImHlrContractsAddReq();
  InitDefaultsXmsgImHlrContractsAddRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddRsp();
  InitDefaultsXmsgImHlrContractsAddNotice_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddNotice();
  InitDefaultsXmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddReplyReq();
  InitDefaultsXmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddReplyRsp();
  InitDefaultsXmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsAddReplyNotice();
  InitDefaultsXmsgImHlrContractsDelReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsDelReq();
  InitDefaultsXmsgImHlrContractsDelRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsDelRsp();
  InitDefaultsXmsgImHlrContractsDelNotice();
  InitDefaultsXmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsUpdateInfoReq();
  InitDefaultsXmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsUpdateInfoRsp();
  InitDefaultsXmsgImHlrContractsSearchReq_HintEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsSearchReq();
  InitDefaultsXmsgImHlrContractsSearchRsp();
  InitDefaultsXmsgImHlrContractsSearchRst_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrContractsSearchRst();
}
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto
class XmsgImHlrContractsAddDirectlyReq;
class XmsgImHlrContractsAddDirectlyReqDefaultTypeInternal;
extern XmsgImHlrContractsAddDirectlyReqDefaultTypeInternal _XmsgImHlrContractsAddDirectlyReq_default_instance_;
class XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse;
class XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddDirectlyRsp;
class XmsgImHlrContractsAddDirectlyRspDefaultTypeInternal;
extern XmsgImHlrContractsAddDirectlyRspDefaultTypeInternal _XmsgImHlrContractsAddDirectlyRsp_default_instance_;
class XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse;
class XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddNotice;
class XmsgImHlrContractsAddNoticeDefaultTypeInternal;
extern XmsgImHlrContractsAddNoticeDefaultTypeInternal _XmsgImHlrContractsAddNotice_default_instance_;
class XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse;
class XmsgImHlrContractsAddNotice_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddNotice_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddReplyNotice;
class XmsgImHlrContractsAddReplyNoticeDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyNoticeDefaultTypeInternal _XmsgImHlrContractsAddReplyNotice_default_instance_;
class XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse;
class XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddReplyReq;
class XmsgImHlrContractsAddReplyReqDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyReqDefaultTypeInternal _XmsgImHlrContractsAddReplyReq_default_instance_;
class XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse;
class XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddReplyRsp;
class XmsgImHlrContractsAddReplyRspDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyRspDefaultTypeInternal _XmsgImHlrContractsAddReplyRsp_default_instance_;
class XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse;
class XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsAddReq;
class XmsgImHlrContractsAddReqDefaultTypeInternal;
extern XmsgImHlrContractsAddReqDefaultTypeInternal _XmsgImHlrContractsAddReq_default_instance_;
class XmsgImHlrContractsAddRsp;
class XmsgImHlrContractsAddRspDefaultTypeInternal;
extern XmsgImHlrContractsAddRspDefaultTypeInternal _XmsgImHlrContractsAddRsp_default_instance_;
class XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse;
class XmsgImHlrContractsAddRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsAddRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsDelNotice;
class XmsgImHlrContractsDelNoticeDefaultTypeInternal;
extern XmsgImHlrContractsDelNoticeDefaultTypeInternal _XmsgImHlrContractsDelNotice_default_instance_;
class XmsgImHlrContractsDelReq;
class XmsgImHlrContractsDelReqDefaultTypeInternal;
extern XmsgImHlrContractsDelReqDefaultTypeInternal _XmsgImHlrContractsDelReq_default_instance_;
class XmsgImHlrContractsDelReq_ExtEntry_DoNotUse;
class XmsgImHlrContractsDelReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsDelReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsDelReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsDelRsp;
class XmsgImHlrContractsDelRspDefaultTypeInternal;
extern XmsgImHlrContractsDelRspDefaultTypeInternal _XmsgImHlrContractsDelRsp_default_instance_;
class XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse;
class XmsgImHlrContractsDelRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsDelRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsSearchReq;
class XmsgImHlrContractsSearchReqDefaultTypeInternal;
extern XmsgImHlrContractsSearchReqDefaultTypeInternal _XmsgImHlrContractsSearchReq_default_instance_;
class XmsgImHlrContractsSearchReq_HintEntry_DoNotUse;
class XmsgImHlrContractsSearchReq_HintEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsSearchReq_HintEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsSearchReq_HintEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsSearchRsp;
class XmsgImHlrContractsSearchRspDefaultTypeInternal;
extern XmsgImHlrContractsSearchRspDefaultTypeInternal _XmsgImHlrContractsSearchRsp_default_instance_;
class XmsgImHlrContractsSearchRst;
class XmsgImHlrContractsSearchRstDefaultTypeInternal;
extern XmsgImHlrContractsSearchRstDefaultTypeInternal _XmsgImHlrContractsSearchRst_default_instance_;
class XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse;
class XmsgImHlrContractsSearchRst_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsSearchRst_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsUpdateInfoReq;
class XmsgImHlrContractsUpdateInfoReqDefaultTypeInternal;
extern XmsgImHlrContractsUpdateInfoReqDefaultTypeInternal _XmsgImHlrContractsUpdateInfoReq_default_instance_;
class XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse;
class XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse_default_instance_;
class XmsgImHlrContractsUpdateInfoRsp;
class XmsgImHlrContractsUpdateInfoRspDefaultTypeInternal;
extern XmsgImHlrContractsUpdateInfoRspDefaultTypeInternal _XmsgImHlrContractsUpdateInfoRsp_default_instance_;
class XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse;
class XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse();
  XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse*>(&_XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddDirectlyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddDirectlyReq) */ {
 public:
  XmsgImHlrContractsAddDirectlyReq();
  virtual ~XmsgImHlrContractsAddDirectlyReq();

  XmsgImHlrContractsAddDirectlyReq(const XmsgImHlrContractsAddDirectlyReq& from);

  inline XmsgImHlrContractsAddDirectlyReq& operator=(const XmsgImHlrContractsAddDirectlyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddDirectlyReq(XmsgImHlrContractsAddDirectlyReq&& from) noexcept
    : XmsgImHlrContractsAddDirectlyReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddDirectlyReq& operator=(XmsgImHlrContractsAddDirectlyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddDirectlyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddDirectlyReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddDirectlyReq*>(
               &_XmsgImHlrContractsAddDirectlyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImHlrContractsAddDirectlyReq* other);
  friend void swap(XmsgImHlrContractsAddDirectlyReq& a, XmsgImHlrContractsAddDirectlyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddDirectlyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddDirectlyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddDirectlyReq& from);
  void MergeFrom(const XmsgImHlrContractsAddDirectlyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddDirectlyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddDirectlyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddDirectlyReq_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddDirectlyReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse();
  XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddDirectlyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddDirectlyRsp) */ {
 public:
  XmsgImHlrContractsAddDirectlyRsp();
  virtual ~XmsgImHlrContractsAddDirectlyRsp();

  XmsgImHlrContractsAddDirectlyRsp(const XmsgImHlrContractsAddDirectlyRsp& from);

  inline XmsgImHlrContractsAddDirectlyRsp& operator=(const XmsgImHlrContractsAddDirectlyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddDirectlyRsp(XmsgImHlrContractsAddDirectlyRsp&& from) noexcept
    : XmsgImHlrContractsAddDirectlyRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddDirectlyRsp& operator=(XmsgImHlrContractsAddDirectlyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddDirectlyRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddDirectlyRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddDirectlyRsp*>(
               &_XmsgImHlrContractsAddDirectlyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImHlrContractsAddDirectlyRsp* other);
  friend void swap(XmsgImHlrContractsAddDirectlyRsp& a, XmsgImHlrContractsAddDirectlyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddDirectlyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddDirectlyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddDirectlyRsp& from);
  void MergeFrom(const XmsgImHlrContractsAddDirectlyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddDirectlyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddDirectlyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddDirectlyRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddDirectlyRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddReq) */ {
 public:
  XmsgImHlrContractsAddReq();
  virtual ~XmsgImHlrContractsAddReq();

  XmsgImHlrContractsAddReq(const XmsgImHlrContractsAddReq& from);

  inline XmsgImHlrContractsAddReq& operator=(const XmsgImHlrContractsAddReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddReq(XmsgImHlrContractsAddReq&& from) noexcept
    : XmsgImHlrContractsAddReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddReq& operator=(XmsgImHlrContractsAddReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddReq*>(
               &_XmsgImHlrContractsAddReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImHlrContractsAddReq* other);
  friend void swap(XmsgImHlrContractsAddReq& a, XmsgImHlrContractsAddReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddReq& from);
  void MergeFrom(const XmsgImHlrContractsAddReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse();
  XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddRsp) */ {
 public:
  XmsgImHlrContractsAddRsp();
  virtual ~XmsgImHlrContractsAddRsp();

  XmsgImHlrContractsAddRsp(const XmsgImHlrContractsAddRsp& from);

  inline XmsgImHlrContractsAddRsp& operator=(const XmsgImHlrContractsAddRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddRsp(XmsgImHlrContractsAddRsp&& from) noexcept
    : XmsgImHlrContractsAddRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddRsp& operator=(XmsgImHlrContractsAddRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddRsp*>(
               &_XmsgImHlrContractsAddRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImHlrContractsAddRsp* other);
  friend void swap(XmsgImHlrContractsAddRsp& a, XmsgImHlrContractsAddRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddRsp& from);
  void MergeFrom(const XmsgImHlrContractsAddRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 2;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse();
  XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse*>(&_XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddNotice) */ {
 public:
  XmsgImHlrContractsAddNotice();
  virtual ~XmsgImHlrContractsAddNotice();

  XmsgImHlrContractsAddNotice(const XmsgImHlrContractsAddNotice& from);

  inline XmsgImHlrContractsAddNotice& operator=(const XmsgImHlrContractsAddNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddNotice(XmsgImHlrContractsAddNotice&& from) noexcept
    : XmsgImHlrContractsAddNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddNotice& operator=(XmsgImHlrContractsAddNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddNotice*>(
               &_XmsgImHlrContractsAddNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImHlrContractsAddNotice* other);
  friend void swap(XmsgImHlrContractsAddNotice& a, XmsgImHlrContractsAddNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddNotice& from);
  void MergeFrom(const XmsgImHlrContractsAddNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 ver = 3;
  void clear_ver();
  static const int kVerFieldNumber = 3;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddNotice_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse();
  XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse*>(&_XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddReplyReq) */ {
 public:
  XmsgImHlrContractsAddReplyReq();
  virtual ~XmsgImHlrContractsAddReplyReq();

  XmsgImHlrContractsAddReplyReq(const XmsgImHlrContractsAddReplyReq& from);

  inline XmsgImHlrContractsAddReplyReq& operator=(const XmsgImHlrContractsAddReplyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddReplyReq(XmsgImHlrContractsAddReplyReq&& from) noexcept
    : XmsgImHlrContractsAddReplyReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddReplyReq& operator=(XmsgImHlrContractsAddReplyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddReplyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddReplyReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddReplyReq*>(
               &_XmsgImHlrContractsAddReplyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgImHlrContractsAddReplyReq* other);
  friend void swap(XmsgImHlrContractsAddReplyReq& a, XmsgImHlrContractsAddReplyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddReplyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddReplyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddReplyReq& from);
  void MergeFrom(const XmsgImHlrContractsAddReplyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddReplyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 4;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // string oper = 2;
  void clear_oper();
  static const int kOperFieldNumber = 2;
  const ::std::string& oper() const;
  void set_oper(const ::std::string& value);
  #if LANG_CXX11
  void set_oper(::std::string&& value);
  #endif
  void set_oper(const char* value);
  void set_oper(const char* value, size_t size);
  ::std::string* mutable_oper();
  ::std::string* release_oper();
  void set_allocated_oper(::std::string* oper);

  // string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddReplyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddReplyReq_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr oper_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddReplyReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse();
  XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddReplyRsp) */ {
 public:
  XmsgImHlrContractsAddReplyRsp();
  virtual ~XmsgImHlrContractsAddReplyRsp();

  XmsgImHlrContractsAddReplyRsp(const XmsgImHlrContractsAddReplyRsp& from);

  inline XmsgImHlrContractsAddReplyRsp& operator=(const XmsgImHlrContractsAddReplyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddReplyRsp(XmsgImHlrContractsAddReplyRsp&& from) noexcept
    : XmsgImHlrContractsAddReplyRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddReplyRsp& operator=(XmsgImHlrContractsAddReplyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddReplyRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddReplyRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddReplyRsp*>(
               &_XmsgImHlrContractsAddReplyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImHlrContractsAddReplyRsp* other);
  friend void swap(XmsgImHlrContractsAddReplyRsp& a, XmsgImHlrContractsAddReplyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddReplyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddReplyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddReplyRsp& from);
  void MergeFrom(const XmsgImHlrContractsAddReplyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddReplyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddReplyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddReplyRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddReplyRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse();
  XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsAddReplyNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsAddReplyNotice) */ {
 public:
  XmsgImHlrContractsAddReplyNotice();
  virtual ~XmsgImHlrContractsAddReplyNotice();

  XmsgImHlrContractsAddReplyNotice(const XmsgImHlrContractsAddReplyNotice& from);

  inline XmsgImHlrContractsAddReplyNotice& operator=(const XmsgImHlrContractsAddReplyNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsAddReplyNotice(XmsgImHlrContractsAddReplyNotice&& from) noexcept
    : XmsgImHlrContractsAddReplyNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsAddReplyNotice& operator=(XmsgImHlrContractsAddReplyNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsAddReplyNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsAddReplyNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsAddReplyNotice*>(
               &_XmsgImHlrContractsAddReplyNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgImHlrContractsAddReplyNotice* other);
  friend void swap(XmsgImHlrContractsAddReplyNotice& a, XmsgImHlrContractsAddReplyNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsAddReplyNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsAddReplyNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsAddReplyNotice& from);
  void MergeFrom(const XmsgImHlrContractsAddReplyNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsAddReplyNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string oper = 2;
  void clear_oper();
  static const int kOperFieldNumber = 2;
  const ::std::string& oper() const;
  void set_oper(const ::std::string& value);
  #if LANG_CXX11
  void set_oper(::std::string&& value);
  #endif
  void set_oper(const char* value);
  void set_oper(const char* value, size_t size);
  ::std::string* mutable_oper();
  ::std::string* release_oper();
  void set_allocated_oper(::std::string* oper);

  // string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // uint64 ver = 4;
  void clear_ver();
  static const int kVerFieldNumber = 4;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsAddReplyNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsAddReplyNotice_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr oper_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsAddReplyNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsDelReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsDelReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsDelReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsDelReq_ExtEntry_DoNotUse();
  XmsgImHlrContractsDelReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsDelReq_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsDelReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsDelReq_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsDelReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsDelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsDelReq) */ {
 public:
  XmsgImHlrContractsDelReq();
  virtual ~XmsgImHlrContractsDelReq();

  XmsgImHlrContractsDelReq(const XmsgImHlrContractsDelReq& from);

  inline XmsgImHlrContractsDelReq& operator=(const XmsgImHlrContractsDelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsDelReq(XmsgImHlrContractsDelReq&& from) noexcept
    : XmsgImHlrContractsDelReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsDelReq& operator=(XmsgImHlrContractsDelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsDelReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsDelReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsDelReq*>(
               &_XmsgImHlrContractsDelReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(XmsgImHlrContractsDelReq* other);
  friend void swap(XmsgImHlrContractsDelReq& a, XmsgImHlrContractsDelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsDelReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsDelReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsDelReq& from);
  void MergeFrom(const XmsgImHlrContractsDelReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsDelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 2;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsDelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsDelReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsDelReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse();
  XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsDelRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsDelRsp) */ {
 public:
  XmsgImHlrContractsDelRsp();
  virtual ~XmsgImHlrContractsDelRsp();

  XmsgImHlrContractsDelRsp(const XmsgImHlrContractsDelRsp& from);

  inline XmsgImHlrContractsDelRsp& operator=(const XmsgImHlrContractsDelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsDelRsp(XmsgImHlrContractsDelRsp&& from) noexcept
    : XmsgImHlrContractsDelRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsDelRsp& operator=(XmsgImHlrContractsDelRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsDelRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsDelRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsDelRsp*>(
               &_XmsgImHlrContractsDelRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(XmsgImHlrContractsDelRsp* other);
  friend void swap(XmsgImHlrContractsDelRsp& a, XmsgImHlrContractsDelRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsDelRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsDelRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsDelRsp& from);
  void MergeFrom(const XmsgImHlrContractsDelRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsDelRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsDelRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsDelRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsDelRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsDelNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsDelNotice) */ {
 public:
  XmsgImHlrContractsDelNotice();
  virtual ~XmsgImHlrContractsDelNotice();

  XmsgImHlrContractsDelNotice(const XmsgImHlrContractsDelNotice& from);

  inline XmsgImHlrContractsDelNotice& operator=(const XmsgImHlrContractsDelNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsDelNotice(XmsgImHlrContractsDelNotice&& from) noexcept
    : XmsgImHlrContractsDelNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsDelNotice& operator=(XmsgImHlrContractsDelNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsDelNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsDelNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsDelNotice*>(
               &_XmsgImHlrContractsDelNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(XmsgImHlrContractsDelNotice* other);
  friend void swap(XmsgImHlrContractsDelNotice& a, XmsgImHlrContractsDelNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsDelNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsDelNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsDelNotice& from);
  void MergeFrom(const XmsgImHlrContractsDelNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsDelNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsDelNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsDelNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse();
  XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse& other);
  static const XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse*>(&_XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsUpdateInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsUpdateInfoReq) */ {
 public:
  XmsgImHlrContractsUpdateInfoReq();
  virtual ~XmsgImHlrContractsUpdateInfoReq();

  XmsgImHlrContractsUpdateInfoReq(const XmsgImHlrContractsUpdateInfoReq& from);

  inline XmsgImHlrContractsUpdateInfoReq& operator=(const XmsgImHlrContractsUpdateInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsUpdateInfoReq(XmsgImHlrContractsUpdateInfoReq&& from) noexcept
    : XmsgImHlrContractsUpdateInfoReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsUpdateInfoReq& operator=(XmsgImHlrContractsUpdateInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsUpdateInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsUpdateInfoReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsUpdateInfoReq*>(
               &_XmsgImHlrContractsUpdateInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(XmsgImHlrContractsUpdateInfoReq* other);
  friend void swap(XmsgImHlrContractsUpdateInfoReq& a, XmsgImHlrContractsUpdateInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsUpdateInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsUpdateInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsUpdateInfoReq& from);
  void MergeFrom(const XmsgImHlrContractsUpdateInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsUpdateInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> upsert = 2;
  int upsert_size() const;
  void clear_upsert();
  static const int kUpsertFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      upsert() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_upsert();

  // repeated string remove = 3;
  int remove_size() const;
  void clear_remove();
  static const int kRemoveFieldNumber = 3;
  const ::std::string& remove(int index) const;
  ::std::string* mutable_remove(int index);
  void set_remove(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_remove(int index, ::std::string&& value);
  #endif
  void set_remove(int index, const char* value);
  void set_remove(int index, const char* value, size_t size);
  ::std::string* add_remove();
  void add_remove(const ::std::string& value);
  #if LANG_CXX11
  void add_remove(::std::string&& value);
  #endif
  void add_remove(const char* value);
  void add_remove(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& remove() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_remove();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsUpdateInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsUpdateInfoReq_UpsertEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > upsert_;
  ::google::protobuf::RepeatedPtrField< ::std::string> remove_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsUpdateInfoReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse();
  XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsUpdateInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsUpdateInfoRsp) */ {
 public:
  XmsgImHlrContractsUpdateInfoRsp();
  virtual ~XmsgImHlrContractsUpdateInfoRsp();

  XmsgImHlrContractsUpdateInfoRsp(const XmsgImHlrContractsUpdateInfoRsp& from);

  inline XmsgImHlrContractsUpdateInfoRsp& operator=(const XmsgImHlrContractsUpdateInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsUpdateInfoRsp(XmsgImHlrContractsUpdateInfoRsp&& from) noexcept
    : XmsgImHlrContractsUpdateInfoRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsUpdateInfoRsp& operator=(XmsgImHlrContractsUpdateInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsUpdateInfoRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsUpdateInfoRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsUpdateInfoRsp*>(
               &_XmsgImHlrContractsUpdateInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(XmsgImHlrContractsUpdateInfoRsp* other);
  friend void swap(XmsgImHlrContractsUpdateInfoRsp& a, XmsgImHlrContractsUpdateInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsUpdateInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsUpdateInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsUpdateInfoRsp& from);
  void MergeFrom(const XmsgImHlrContractsUpdateInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsUpdateInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsUpdateInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsUpdateInfoRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsUpdateInfoRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsSearchReq_HintEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsSearchReq_HintEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsSearchReq_HintEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsSearchReq_HintEntry_DoNotUse();
  XmsgImHlrContractsSearchReq_HintEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsSearchReq_HintEntry_DoNotUse& other);
  static const XmsgImHlrContractsSearchReq_HintEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsSearchReq_HintEntry_DoNotUse*>(&_XmsgImHlrContractsSearchReq_HintEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsSearchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsSearchReq) */ {
 public:
  XmsgImHlrContractsSearchReq();
  virtual ~XmsgImHlrContractsSearchReq();

  XmsgImHlrContractsSearchReq(const XmsgImHlrContractsSearchReq& from);

  inline XmsgImHlrContractsSearchReq& operator=(const XmsgImHlrContractsSearchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsSearchReq(XmsgImHlrContractsSearchReq&& from) noexcept
    : XmsgImHlrContractsSearchReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsSearchReq& operator=(XmsgImHlrContractsSearchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsSearchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsSearchReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsSearchReq*>(
               &_XmsgImHlrContractsSearchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(XmsgImHlrContractsSearchReq* other);
  friend void swap(XmsgImHlrContractsSearchReq& a, XmsgImHlrContractsSearchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsSearchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsSearchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsSearchReq& from);
  void MergeFrom(const XmsgImHlrContractsSearchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsSearchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> hint = 2;
  int hint_size() const;
  void clear_hint();
  static const int kHintFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      hint() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_hint();

  // string keyword = 1;
  void clear_keyword();
  static const int kKeywordFieldNumber = 1;
  const ::std::string& keyword() const;
  void set_keyword(const ::std::string& value);
  #if LANG_CXX11
  void set_keyword(::std::string&& value);
  #endif
  void set_keyword(const char* value);
  void set_keyword(const char* value, size_t size);
  ::std::string* mutable_keyword();
  ::std::string* release_keyword();
  void set_allocated_keyword(::std::string* keyword);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsSearchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsSearchReq_HintEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > hint_;
  ::google::protobuf::internal::ArenaStringPtr keyword_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsSearchReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsSearchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsSearchRsp) */ {
 public:
  XmsgImHlrContractsSearchRsp();
  virtual ~XmsgImHlrContractsSearchRsp();

  XmsgImHlrContractsSearchRsp(const XmsgImHlrContractsSearchRsp& from);

  inline XmsgImHlrContractsSearchRsp& operator=(const XmsgImHlrContractsSearchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsSearchRsp(XmsgImHlrContractsSearchRsp&& from) noexcept
    : XmsgImHlrContractsSearchRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsSearchRsp& operator=(XmsgImHlrContractsSearchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsSearchRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsSearchRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsSearchRsp*>(
               &_XmsgImHlrContractsSearchRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(XmsgImHlrContractsSearchRsp* other);
  friend void swap(XmsgImHlrContractsSearchRsp& a, XmsgImHlrContractsSearchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsSearchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsSearchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsSearchRsp& from);
  void MergeFrom(const XmsgImHlrContractsSearchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsSearchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImHlrContractsSearchRst rst = 1;
  int rst_size() const;
  void clear_rst();
  static const int kRstFieldNumber = 1;
  const ::XmsgImHlrContractsSearchRst& rst(int index) const;
  ::XmsgImHlrContractsSearchRst* mutable_rst(int index);
  ::XmsgImHlrContractsSearchRst* add_rst();
  ::google::protobuf::RepeatedPtrField< ::XmsgImHlrContractsSearchRst >*
      mutable_rst();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImHlrContractsSearchRst >&
      rst() const;

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsSearchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImHlrContractsSearchRst > rst_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsSearchRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse();
  XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse& other);
  static const XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse*>(&_XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrContractsSearchRst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrContractsSearchRst) */ {
 public:
  XmsgImHlrContractsSearchRst();
  virtual ~XmsgImHlrContractsSearchRst();

  XmsgImHlrContractsSearchRst(const XmsgImHlrContractsSearchRst& from);

  inline XmsgImHlrContractsSearchRst& operator=(const XmsgImHlrContractsSearchRst& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrContractsSearchRst(XmsgImHlrContractsSearchRst&& from) noexcept
    : XmsgImHlrContractsSearchRst() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrContractsSearchRst& operator=(XmsgImHlrContractsSearchRst&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrContractsSearchRst& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrContractsSearchRst* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrContractsSearchRst*>(
               &_XmsgImHlrContractsSearchRst_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(XmsgImHlrContractsSearchRst* other);
  friend void swap(XmsgImHlrContractsSearchRst& a, XmsgImHlrContractsSearchRst& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrContractsSearchRst* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrContractsSearchRst* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrContractsSearchRst& from);
  void MergeFrom(const XmsgImHlrContractsSearchRst& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrContractsSearchRst* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 3;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XmsgImHlrContractsSearchRst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrContractsSearchRst_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto::InitDefaultsXmsgImHlrContractsSearchRstImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgImHlrContractsAddDirectlyReq

// string cgt = 1;
inline void XmsgImHlrContractsAddDirectlyReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddDirectlyReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddDirectlyReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsAddDirectlyReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddDirectlyReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddDirectlyReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddDirectlyReq.cgt)
}
#endif
inline void XmsgImHlrContractsAddDirectlyReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddDirectlyReq.cgt)
}
inline void XmsgImHlrContractsAddDirectlyReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddDirectlyReq.cgt)
}
inline ::std::string* XmsgImHlrContractsAddDirectlyReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddDirectlyReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddDirectlyReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddDirectlyReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddDirectlyReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddDirectlyReq.cgt)
}

// map<string, string> info = 2;
inline int XmsgImHlrContractsAddDirectlyReq::info_size() const {
  return info_.size();
}
inline void XmsgImHlrContractsAddDirectlyReq::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddDirectlyReq::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddDirectlyReq.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddDirectlyReq::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddDirectlyReq.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddDirectlyRsp

// map<string, string> ext = 1;
inline int XmsgImHlrContractsAddDirectlyRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsAddDirectlyRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddDirectlyRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddDirectlyRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddDirectlyRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddDirectlyRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrContractsAddReq

// string cgt = 1;
inline void XmsgImHlrContractsAddReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsAddReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReq.cgt)
}
#endif
inline void XmsgImHlrContractsAddReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReq.cgt)
}
inline void XmsgImHlrContractsAddReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReq.cgt)
}
inline ::std::string* XmsgImHlrContractsAddReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReq.cgt)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddRsp

// uint64 ver = 1;
inline void XmsgImHlrContractsAddRsp::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrContractsAddRsp::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddRsp.ver)
  return ver_;
}
inline void XmsgImHlrContractsAddRsp::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddRsp.ver)
}

// map<string, string> ext = 2;
inline int XmsgImHlrContractsAddRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsAddRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddNotice

// string cgt = 1;
inline void XmsgImHlrContractsAddNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsAddNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddNotice.cgt)
}
#endif
inline void XmsgImHlrContractsAddNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddNotice.cgt)
}
inline void XmsgImHlrContractsAddNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddNotice.cgt)
}
inline ::std::string* XmsgImHlrContractsAddNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddNotice.cgt)
}

// map<string, string> info = 2;
inline int XmsgImHlrContractsAddNotice::info_size() const {
  return info_.size();
}
inline void XmsgImHlrContractsAddNotice::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddNotice::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddNotice.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddNotice::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddNotice.info)
  return info_.MutableMap();
}

// uint64 ver = 3;
inline void XmsgImHlrContractsAddNotice::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrContractsAddNotice::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddNotice.ver)
  return ver_;
}
inline void XmsgImHlrContractsAddNotice::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddNotice.ver)
}

// uint64 gts = 4;
inline void XmsgImHlrContractsAddNotice::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrContractsAddNotice::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddNotice.gts)
  return gts_;
}
inline void XmsgImHlrContractsAddNotice::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddNotice.gts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddReplyReq

// uint64 ver = 1;
inline void XmsgImHlrContractsAddReplyReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrContractsAddReplyReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyReq.ver)
  return ver_;
}
inline void XmsgImHlrContractsAddReplyReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyReq.ver)
}

// string oper = 2;
inline void XmsgImHlrContractsAddReplyReq::clear_oper() {
  oper_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReplyReq::oper() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyReq.oper)
  return oper_.GetNoArena();
}
inline void XmsgImHlrContractsAddReplyReq::set_oper(const ::std::string& value) {
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyReq.oper)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReplyReq::set_oper(::std::string&& value) {
  
  oper_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReplyReq.oper)
}
#endif
inline void XmsgImHlrContractsAddReplyReq::set_oper(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReplyReq.oper)
}
inline void XmsgImHlrContractsAddReplyReq::set_oper(const char* value, size_t size) {
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReplyReq.oper)
}
inline ::std::string* XmsgImHlrContractsAddReplyReq::mutable_oper() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReplyReq.oper)
  return oper_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReplyReq::release_oper() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReplyReq.oper)
  
  return oper_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReplyReq::set_allocated_oper(::std::string* oper) {
  if (oper != NULL) {
    
  } else {
    
  }
  oper_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oper);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReplyReq.oper)
}

// string desc = 3;
inline void XmsgImHlrContractsAddReplyReq::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReplyReq::desc() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyReq.desc)
  return desc_.GetNoArena();
}
inline void XmsgImHlrContractsAddReplyReq::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyReq.desc)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReplyReq::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReplyReq.desc)
}
#endif
inline void XmsgImHlrContractsAddReplyReq::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReplyReq.desc)
}
inline void XmsgImHlrContractsAddReplyReq::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReplyReq.desc)
}
inline ::std::string* XmsgImHlrContractsAddReplyReq::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReplyReq.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReplyReq::release_desc() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReplyReq.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReplyReq::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReplyReq.desc)
}

// map<string, string> info = 4;
inline int XmsgImHlrContractsAddReplyReq::info_size() const {
  return info_.size();
}
inline void XmsgImHlrContractsAddReplyReq::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddReplyReq::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddReplyReq.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddReplyReq::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddReplyReq.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddReplyRsp

// map<string, string> ext = 1;
inline int XmsgImHlrContractsAddReplyRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsAddReplyRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddReplyRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddReplyRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddReplyRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddReplyRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsAddReplyNotice

// string cgt = 1;
inline void XmsgImHlrContractsAddReplyNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReplyNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsAddReplyNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReplyNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReplyNotice.cgt)
}
#endif
inline void XmsgImHlrContractsAddReplyNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReplyNotice.cgt)
}
inline void XmsgImHlrContractsAddReplyNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReplyNotice.cgt)
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReplyNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReplyNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReplyNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReplyNotice.cgt)
}

// string oper = 2;
inline void XmsgImHlrContractsAddReplyNotice::clear_oper() {
  oper_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReplyNotice::oper() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyNotice.oper)
  return oper_.GetNoArena();
}
inline void XmsgImHlrContractsAddReplyNotice::set_oper(const ::std::string& value) {
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyNotice.oper)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReplyNotice::set_oper(::std::string&& value) {
  
  oper_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReplyNotice.oper)
}
#endif
inline void XmsgImHlrContractsAddReplyNotice::set_oper(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReplyNotice.oper)
}
inline void XmsgImHlrContractsAddReplyNotice::set_oper(const char* value, size_t size) {
  
  oper_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReplyNotice.oper)
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::mutable_oper() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReplyNotice.oper)
  return oper_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::release_oper() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReplyNotice.oper)
  
  return oper_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReplyNotice::set_allocated_oper(::std::string* oper) {
  if (oper != NULL) {
    
  } else {
    
  }
  oper_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oper);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReplyNotice.oper)
}

// string desc = 3;
inline void XmsgImHlrContractsAddReplyNotice::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsAddReplyNotice::desc() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyNotice.desc)
  return desc_.GetNoArena();
}
inline void XmsgImHlrContractsAddReplyNotice::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyNotice.desc)
}
#if LANG_CXX11
inline void XmsgImHlrContractsAddReplyNotice::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsAddReplyNotice.desc)
}
#endif
inline void XmsgImHlrContractsAddReplyNotice::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsAddReplyNotice.desc)
}
inline void XmsgImHlrContractsAddReplyNotice::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsAddReplyNotice.desc)
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsAddReplyNotice.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsAddReplyNotice::release_desc() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsAddReplyNotice.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsAddReplyNotice::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsAddReplyNotice.desc)
}

// uint64 ver = 4;
inline void XmsgImHlrContractsAddReplyNotice::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrContractsAddReplyNotice::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsAddReplyNotice.ver)
  return ver_;
}
inline void XmsgImHlrContractsAddReplyNotice::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsAddReplyNotice.ver)
}

// map<string, string> ext = 5;
inline int XmsgImHlrContractsAddReplyNotice::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsAddReplyNotice::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsAddReplyNotice::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsAddReplyNotice.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsAddReplyNotice::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsAddReplyNotice.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsDelReq

// string cgt = 1;
inline void XmsgImHlrContractsDelReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsDelReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsDelReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsDelReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsDelReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsDelReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsDelReq.cgt)
}
#endif
inline void XmsgImHlrContractsDelReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsDelReq.cgt)
}
inline void XmsgImHlrContractsDelReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsDelReq.cgt)
}
inline ::std::string* XmsgImHlrContractsDelReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsDelReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsDelReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsDelReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsDelReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsDelReq.cgt)
}

// map<string, string> ext = 2;
inline int XmsgImHlrContractsDelReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsDelReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsDelReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsDelReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsDelReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsDelReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsDelRsp

// map<string, string> ext = 1;
inline int XmsgImHlrContractsDelRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsDelRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsDelRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsDelRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsDelRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsDelRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrContractsDelNotice

// string cgt = 1;
inline void XmsgImHlrContractsDelNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsDelNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsDelNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsDelNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsDelNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsDelNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsDelNotice.cgt)
}
#endif
inline void XmsgImHlrContractsDelNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsDelNotice.cgt)
}
inline void XmsgImHlrContractsDelNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsDelNotice.cgt)
}
inline ::std::string* XmsgImHlrContractsDelNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsDelNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsDelNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsDelNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsDelNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsDelNotice.cgt)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsUpdateInfoReq

// string cgt = 1;
inline void XmsgImHlrContractsUpdateInfoReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsUpdateInfoReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsUpdateInfoReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsUpdateInfoReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsUpdateInfoReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsUpdateInfoReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsUpdateInfoReq.cgt)
}
#endif
inline void XmsgImHlrContractsUpdateInfoReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsUpdateInfoReq.cgt)
}
inline void XmsgImHlrContractsUpdateInfoReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsUpdateInfoReq.cgt)
}
inline ::std::string* XmsgImHlrContractsUpdateInfoReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsUpdateInfoReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsUpdateInfoReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsUpdateInfoReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsUpdateInfoReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsUpdateInfoReq.cgt)
}

// map<string, string> upsert = 2;
inline int XmsgImHlrContractsUpdateInfoReq::upsert_size() const {
  return upsert_.size();
}
inline void XmsgImHlrContractsUpdateInfoReq::clear_upsert() {
  upsert_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsUpdateInfoReq::upsert() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsUpdateInfoReq.upsert)
  return upsert_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsUpdateInfoReq::mutable_upsert() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsUpdateInfoReq.upsert)
  return upsert_.MutableMap();
}

// repeated string remove = 3;
inline int XmsgImHlrContractsUpdateInfoReq::remove_size() const {
  return remove_.size();
}
inline void XmsgImHlrContractsUpdateInfoReq::clear_remove() {
  remove_.Clear();
}
inline const ::std::string& XmsgImHlrContractsUpdateInfoReq::remove(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsUpdateInfoReq.remove)
  return remove_.Get(index);
}
inline ::std::string* XmsgImHlrContractsUpdateInfoReq::mutable_remove(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsUpdateInfoReq.remove)
  return remove_.Mutable(index);
}
inline void XmsgImHlrContractsUpdateInfoReq::set_remove(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsUpdateInfoReq.remove)
  remove_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgImHlrContractsUpdateInfoReq::set_remove(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsUpdateInfoReq.remove)
  remove_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgImHlrContractsUpdateInfoReq::set_remove(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remove_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsUpdateInfoReq.remove)
}
inline void XmsgImHlrContractsUpdateInfoReq::set_remove(int index, const char* value, size_t size) {
  remove_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsUpdateInfoReq.remove)
}
inline ::std::string* XmsgImHlrContractsUpdateInfoReq::add_remove() {
  // @@protoc_insertion_point(field_add_mutable:XmsgImHlrContractsUpdateInfoReq.remove)
  return remove_.Add();
}
inline void XmsgImHlrContractsUpdateInfoReq::add_remove(const ::std::string& value) {
  remove_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgImHlrContractsUpdateInfoReq.remove)
}
#if LANG_CXX11
inline void XmsgImHlrContractsUpdateInfoReq::add_remove(::std::string&& value) {
  remove_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgImHlrContractsUpdateInfoReq.remove)
}
#endif
inline void XmsgImHlrContractsUpdateInfoReq::add_remove(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remove_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgImHlrContractsUpdateInfoReq.remove)
}
inline void XmsgImHlrContractsUpdateInfoReq::add_remove(const char* value, size_t size) {
  remove_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgImHlrContractsUpdateInfoReq.remove)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgImHlrContractsUpdateInfoReq::remove() const {
  // @@protoc_insertion_point(field_list:XmsgImHlrContractsUpdateInfoReq.remove)
  return remove_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgImHlrContractsUpdateInfoReq::mutable_remove() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImHlrContractsUpdateInfoReq.remove)
  return &remove_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsUpdateInfoRsp

// map<string, string> ext = 1;
inline int XmsgImHlrContractsUpdateInfoRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrContractsUpdateInfoRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsUpdateInfoRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsUpdateInfoRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsUpdateInfoRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsUpdateInfoRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsSearchReq

// string keyword = 1;
inline void XmsgImHlrContractsSearchReq::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsSearchReq::keyword() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsSearchReq.keyword)
  return keyword_.GetNoArena();
}
inline void XmsgImHlrContractsSearchReq::set_keyword(const ::std::string& value) {
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsSearchReq.keyword)
}
#if LANG_CXX11
inline void XmsgImHlrContractsSearchReq::set_keyword(::std::string&& value) {
  
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsSearchReq.keyword)
}
#endif
inline void XmsgImHlrContractsSearchReq::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsSearchReq.keyword)
}
inline void XmsgImHlrContractsSearchReq::set_keyword(const char* value, size_t size) {
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsSearchReq.keyword)
}
inline ::std::string* XmsgImHlrContractsSearchReq::mutable_keyword() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsSearchReq.keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsSearchReq::release_keyword() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsSearchReq.keyword)
  
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsSearchReq::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    
  } else {
    
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsSearchReq.keyword)
}

// map<string, string> hint = 2;
inline int XmsgImHlrContractsSearchReq::hint_size() const {
  return hint_.size();
}
inline void XmsgImHlrContractsSearchReq::clear_hint() {
  hint_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsSearchReq::hint() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsSearchReq.hint)
  return hint_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsSearchReq::mutable_hint() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsSearchReq.hint)
  return hint_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrContractsSearchRsp

// repeated .XmsgImHlrContractsSearchRst rst = 1;
inline int XmsgImHlrContractsSearchRsp::rst_size() const {
  return rst_.size();
}
inline void XmsgImHlrContractsSearchRsp::clear_rst() {
  rst_.Clear();
}
inline const ::XmsgImHlrContractsSearchRst& XmsgImHlrContractsSearchRsp::rst(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsSearchRsp.rst)
  return rst_.Get(index);
}
inline ::XmsgImHlrContractsSearchRst* XmsgImHlrContractsSearchRsp::mutable_rst(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsSearchRsp.rst)
  return rst_.Mutable(index);
}
inline ::XmsgImHlrContractsSearchRst* XmsgImHlrContractsSearchRsp::add_rst() {
  // @@protoc_insertion_point(field_add:XmsgImHlrContractsSearchRsp.rst)
  return rst_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImHlrContractsSearchRst >*
XmsgImHlrContractsSearchRsp::mutable_rst() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImHlrContractsSearchRsp.rst)
  return &rst_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImHlrContractsSearchRst >&
XmsgImHlrContractsSearchRsp::rst() const {
  // @@protoc_insertion_point(field_list:XmsgImHlrContractsSearchRsp.rst)
  return rst_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrContractsSearchRst

// string cgt = 1;
inline void XmsgImHlrContractsSearchRst::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsSearchRst::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsSearchRst.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrContractsSearchRst::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsSearchRst.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrContractsSearchRst::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsSearchRst.cgt)
}
#endif
inline void XmsgImHlrContractsSearchRst::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsSearchRst.cgt)
}
inline void XmsgImHlrContractsSearchRst::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsSearchRst.cgt)
}
inline ::std::string* XmsgImHlrContractsSearchRst::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsSearchRst.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsSearchRst::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsSearchRst.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsSearchRst::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsSearchRst.cgt)
}

// string name = 2;
inline void XmsgImHlrContractsSearchRst::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrContractsSearchRst::name() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrContractsSearchRst.name)
  return name_.GetNoArena();
}
inline void XmsgImHlrContractsSearchRst::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrContractsSearchRst.name)
}
#if LANG_CXX11
inline void XmsgImHlrContractsSearchRst::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrContractsSearchRst.name)
}
#endif
inline void XmsgImHlrContractsSearchRst::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrContractsSearchRst.name)
}
inline void XmsgImHlrContractsSearchRst::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrContractsSearchRst.name)
}
inline ::std::string* XmsgImHlrContractsSearchRst::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrContractsSearchRst.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrContractsSearchRst::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImHlrContractsSearchRst.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrContractsSearchRst::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrContractsSearchRst.name)
}

// map<string, string> info = 3;
inline int XmsgImHlrContractsSearchRst::info_size() const {
  return info_.size();
}
inline void XmsgImHlrContractsSearchRst::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrContractsSearchRst::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrContractsSearchRst.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrContractsSearchRst::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrContractsSearchRst.info)
  return info_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dcontacts_2eproto__INCLUDED
