// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-hlr-usr-dat.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImHlrUsrDatImpl();
void InitDefaultsXmsgImHlrUsrDat();
void InitDefaultsXmsgImHlrUsrDatPri_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrDatPri_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrDatPriImpl();
void InitDefaultsXmsgImHlrUsrDatPri();
void InitDefaultsXmsgImHlrUsrDatPub_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrDatPub_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrDatPubImpl();
void InitDefaultsXmsgImHlrUsrDatPub();
void InitDefaultsXmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInfoQueryReqImpl();
void InitDefaultsXmsgImHlrUsrInfoQueryReq();
void InitDefaultsXmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInfoQueryRspImpl();
void InitDefaultsXmsgImHlrUsrInfoQueryRsp();
void InitDefaultsXmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInfoUpdateReqImpl();
void InitDefaultsXmsgImHlrUsrInfoUpdateReq();
void InitDefaultsXmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInfoUpdateRspImpl();
void InitDefaultsXmsgImHlrUsrInfoUpdateRsp();
inline void InitDefaults() {
  InitDefaultsXmsgImHlrUsrDat();
  InitDefaultsXmsgImHlrUsrDatPri_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrDatPri();
  InitDefaultsXmsgImHlrUsrDatPub_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrDatPub();
  InitDefaultsXmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInfoQueryReq();
  InitDefaultsXmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInfoQueryRsp();
  InitDefaultsXmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInfoUpdateReq();
  InitDefaultsXmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInfoUpdateRsp();
}
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto
class XmsgImHlrUsrDat;
class XmsgImHlrUsrDatDefaultTypeInternal;
extern XmsgImHlrUsrDatDefaultTypeInternal _XmsgImHlrUsrDat_default_instance_;
class XmsgImHlrUsrDatPri;
class XmsgImHlrUsrDatPriDefaultTypeInternal;
extern XmsgImHlrUsrDatPriDefaultTypeInternal _XmsgImHlrUsrDatPri_default_instance_;
class XmsgImHlrUsrDatPri_InfoEntry_DoNotUse;
class XmsgImHlrUsrDatPri_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrDatPri_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrDatPri_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrDatPub;
class XmsgImHlrUsrDatPubDefaultTypeInternal;
extern XmsgImHlrUsrDatPubDefaultTypeInternal _XmsgImHlrUsrDatPub_default_instance_;
class XmsgImHlrUsrDatPub_InfoEntry_DoNotUse;
class XmsgImHlrUsrDatPub_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrDatPub_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrDatPub_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInfoQueryReq;
class XmsgImHlrUsrInfoQueryReqDefaultTypeInternal;
extern XmsgImHlrUsrInfoQueryReqDefaultTypeInternal _XmsgImHlrUsrInfoQueryReq_default_instance_;
class XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse;
class XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInfoQueryRsp;
class XmsgImHlrUsrInfoQueryRspDefaultTypeInternal;
extern XmsgImHlrUsrInfoQueryRspDefaultTypeInternal _XmsgImHlrUsrInfoQueryRsp_default_instance_;
class XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse;
class XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInfoUpdateReq;
class XmsgImHlrUsrInfoUpdateReqDefaultTypeInternal;
extern XmsgImHlrUsrInfoUpdateReqDefaultTypeInternal _XmsgImHlrUsrInfoUpdateReq_default_instance_;
class XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse;
class XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInfoUpdateRsp;
class XmsgImHlrUsrInfoUpdateRspDefaultTypeInternal;
extern XmsgImHlrUsrInfoUpdateRspDefaultTypeInternal _XmsgImHlrUsrInfoUpdateRsp_default_instance_;
class XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse;
class XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgImHlrUsrDat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrDat) */ {
 public:
  XmsgImHlrUsrDat();
  virtual ~XmsgImHlrUsrDat();

  XmsgImHlrUsrDat(const XmsgImHlrUsrDat& from);

  inline XmsgImHlrUsrDat& operator=(const XmsgImHlrUsrDat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrDat(XmsgImHlrUsrDat&& from) noexcept
    : XmsgImHlrUsrDat() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrDat& operator=(XmsgImHlrUsrDat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrDat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrDat* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrDat*>(
               &_XmsgImHlrUsrDat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImHlrUsrDat* other);
  friend void swap(XmsgImHlrUsrDat& a, XmsgImHlrUsrDat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrDat* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrDat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrDat& from);
  void MergeFrom(const XmsgImHlrUsrDat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrDat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // .XmsgImHlrUsrDatPri pri = 3;
  bool has_pri() const;
  void clear_pri();
  static const int kPriFieldNumber = 3;
  const ::XmsgImHlrUsrDatPri& pri() const;
  ::XmsgImHlrUsrDatPri* release_pri();
  ::XmsgImHlrUsrDatPri* mutable_pri();
  void set_allocated_pri(::XmsgImHlrUsrDatPri* pri);

  // .XmsgImHlrUsrDatPub pub = 4;
  bool has_pub() const;
  void clear_pub();
  static const int kPubFieldNumber = 4;
  const ::XmsgImHlrUsrDatPub& pub() const;
  ::XmsgImHlrUsrDatPub* release_pub();
  ::XmsgImHlrUsrDatPub* mutable_pub();
  void set_allocated_pub(::XmsgImHlrUsrDatPub* pub);

  // uint64 ver = 2;
  void clear_ver();
  static const int kVerFieldNumber = 2;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 5;
  void clear_gts();
  static const int kGtsFieldNumber = 5;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 uts = 6;
  void clear_uts();
  static const int kUtsFieldNumber = 6;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrDat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::XmsgImHlrUsrDatPri* pri_;
  ::XmsgImHlrUsrDatPub* pub_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 uts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrDatImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrDatPri_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrDatPri_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrDatPri_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrDatPri_InfoEntry_DoNotUse();
  XmsgImHlrUsrDatPri_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrDatPri_InfoEntry_DoNotUse& other);
  static const XmsgImHlrUsrDatPri_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrDatPri_InfoEntry_DoNotUse*>(&_XmsgImHlrUsrDatPri_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrDatPri : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrDatPri) */ {
 public:
  XmsgImHlrUsrDatPri();
  virtual ~XmsgImHlrUsrDatPri();

  XmsgImHlrUsrDatPri(const XmsgImHlrUsrDatPri& from);

  inline XmsgImHlrUsrDatPri& operator=(const XmsgImHlrUsrDatPri& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrDatPri(XmsgImHlrUsrDatPri&& from) noexcept
    : XmsgImHlrUsrDatPri() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrDatPri& operator=(XmsgImHlrUsrDatPri&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrDatPri& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrDatPri* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrDatPri*>(
               &_XmsgImHlrUsrDatPri_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgImHlrUsrDatPri* other);
  friend void swap(XmsgImHlrUsrDatPri& a, XmsgImHlrUsrDatPri& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrDatPri* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrDatPri* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrDatPri& from);
  void MergeFrom(const XmsgImHlrUsrDatPri& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrDatPri* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // uint64 sysEventVerRead = 3;
  void clear_syseventverread();
  static const int kSysEventVerReadFieldNumber = 3;
  ::google::protobuf::uint64 syseventverread() const;
  void set_syseventverread(::google::protobuf::uint64 value);

  // bool enable = 1;
  void clear_enable();
  static const int kEnableFieldNumber = 1;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrDatPri)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrDatPri_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::uint64 syseventverread_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrDatPriImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrDatPub_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrDatPub_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrDatPub_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrDatPub_InfoEntry_DoNotUse();
  XmsgImHlrUsrDatPub_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrDatPub_InfoEntry_DoNotUse& other);
  static const XmsgImHlrUsrDatPub_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrDatPub_InfoEntry_DoNotUse*>(&_XmsgImHlrUsrDatPub_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrDatPub : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrDatPub) */ {
 public:
  XmsgImHlrUsrDatPub();
  virtual ~XmsgImHlrUsrDatPub();

  XmsgImHlrUsrDatPub(const XmsgImHlrUsrDatPub& from);

  inline XmsgImHlrUsrDatPub& operator=(const XmsgImHlrUsrDatPub& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrDatPub(XmsgImHlrUsrDatPub&& from) noexcept
    : XmsgImHlrUsrDatPub() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrDatPub& operator=(XmsgImHlrUsrDatPub&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrDatPub& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrDatPub* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrDatPub*>(
               &_XmsgImHlrUsrDatPub_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImHlrUsrDatPub* other);
  friend void swap(XmsgImHlrUsrDatPub& a, XmsgImHlrUsrDatPub& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrDatPub* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrDatPub* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrDatPub& from);
  void MergeFrom(const XmsgImHlrUsrDatPub& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrDatPub* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrDatPub)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrDatPub_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrDatPubImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse();
  XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse& other);
  static const XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse*>(&_XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInfoQueryReq) */ {
 public:
  XmsgImHlrUsrInfoQueryReq();
  virtual ~XmsgImHlrUsrInfoQueryReq();

  XmsgImHlrUsrInfoQueryReq(const XmsgImHlrUsrInfoQueryReq& from);

  inline XmsgImHlrUsrInfoQueryReq& operator=(const XmsgImHlrUsrInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInfoQueryReq(XmsgImHlrUsrInfoQueryReq&& from) noexcept
    : XmsgImHlrUsrInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInfoQueryReq& operator=(XmsgImHlrUsrInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInfoQueryReq*>(
               &_XmsgImHlrUsrInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImHlrUsrInfoQueryReq* other);
  friend void swap(XmsgImHlrUsrInfoQueryReq& a, XmsgImHlrUsrInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInfoQueryReq& from);
  void MergeFrom(const XmsgImHlrUsrInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInfoQueryReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse();
  XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse& other);
  static const XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse*>(&_XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInfoQueryRsp) */ {
 public:
  XmsgImHlrUsrInfoQueryRsp();
  virtual ~XmsgImHlrUsrInfoQueryRsp();

  XmsgImHlrUsrInfoQueryRsp(const XmsgImHlrUsrInfoQueryRsp& from);

  inline XmsgImHlrUsrInfoQueryRsp& operator=(const XmsgImHlrUsrInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInfoQueryRsp(XmsgImHlrUsrInfoQueryRsp&& from) noexcept
    : XmsgImHlrUsrInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInfoQueryRsp& operator=(XmsgImHlrUsrInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInfoQueryRsp*>(
               &_XmsgImHlrUsrInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImHlrUsrInfoQueryRsp* other);
  friend void swap(XmsgImHlrUsrInfoQueryRsp& a, XmsgImHlrUsrInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInfoQueryRsp& from);
  void MergeFrom(const XmsgImHlrUsrInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInfoQueryRsp_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse();
  XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse& other);
  static const XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse*>(&_XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInfoUpdateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInfoUpdateReq) */ {
 public:
  XmsgImHlrUsrInfoUpdateReq();
  virtual ~XmsgImHlrUsrInfoUpdateReq();

  XmsgImHlrUsrInfoUpdateReq(const XmsgImHlrUsrInfoUpdateReq& from);

  inline XmsgImHlrUsrInfoUpdateReq& operator=(const XmsgImHlrUsrInfoUpdateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInfoUpdateReq(XmsgImHlrUsrInfoUpdateReq&& from) noexcept
    : XmsgImHlrUsrInfoUpdateReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInfoUpdateReq& operator=(XmsgImHlrUsrInfoUpdateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInfoUpdateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInfoUpdateReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInfoUpdateReq*>(
               &_XmsgImHlrUsrInfoUpdateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgImHlrUsrInfoUpdateReq* other);
  friend void swap(XmsgImHlrUsrInfoUpdateReq& a, XmsgImHlrUsrInfoUpdateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInfoUpdateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInfoUpdateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInfoUpdateReq& from);
  void MergeFrom(const XmsgImHlrUsrInfoUpdateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInfoUpdateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInfoUpdateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInfoUpdateReq_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrInfoUpdateReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse();
  XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInfoUpdateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInfoUpdateRsp) */ {
 public:
  XmsgImHlrUsrInfoUpdateRsp();
  virtual ~XmsgImHlrUsrInfoUpdateRsp();

  XmsgImHlrUsrInfoUpdateRsp(const XmsgImHlrUsrInfoUpdateRsp& from);

  inline XmsgImHlrUsrInfoUpdateRsp& operator=(const XmsgImHlrUsrInfoUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInfoUpdateRsp(XmsgImHlrUsrInfoUpdateRsp&& from) noexcept
    : XmsgImHlrUsrInfoUpdateRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInfoUpdateRsp& operator=(XmsgImHlrUsrInfoUpdateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInfoUpdateRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInfoUpdateRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInfoUpdateRsp*>(
               &_XmsgImHlrUsrInfoUpdateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImHlrUsrInfoUpdateRsp* other);
  friend void swap(XmsgImHlrUsrInfoUpdateRsp& a, XmsgImHlrUsrInfoUpdateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInfoUpdateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInfoUpdateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInfoUpdateRsp& from);
  void MergeFrom(const XmsgImHlrUsrInfoUpdateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInfoUpdateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInfoUpdateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInfoUpdateRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto::InitDefaultsXmsgImHlrUsrInfoUpdateRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImHlrUsrDat

// string uid = 1;
inline void XmsgImHlrUsrDat::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrDat::uid() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.uid)
  return uid_.GetNoArena();
}
inline void XmsgImHlrUsrDat::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDat.uid)
}
#if LANG_CXX11
inline void XmsgImHlrUsrDat::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrDat.uid)
}
#endif
inline void XmsgImHlrUsrDat::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrDat.uid)
}
inline void XmsgImHlrUsrDat::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrDat.uid)
}
inline ::std::string* XmsgImHlrUsrDat::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrDat.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrDat::release_uid() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrDat.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrDat::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrDat.uid)
}

// uint64 ver = 2;
inline void XmsgImHlrUsrDat::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrDat::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.ver)
  return ver_;
}
inline void XmsgImHlrUsrDat::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDat.ver)
}

// .XmsgImHlrUsrDatPri pri = 3;
inline bool XmsgImHlrUsrDat::has_pri() const {
  return this != internal_default_instance() && pri_ != NULL;
}
inline void XmsgImHlrUsrDat::clear_pri() {
  if (GetArenaNoVirtual() == NULL && pri_ != NULL) {
    delete pri_;
  }
  pri_ = NULL;
}
inline const ::XmsgImHlrUsrDatPri& XmsgImHlrUsrDat::pri() const {
  const ::XmsgImHlrUsrDatPri* p = pri_;
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.pri)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImHlrUsrDatPri*>(
      &::_XmsgImHlrUsrDatPri_default_instance_);
}
inline ::XmsgImHlrUsrDatPri* XmsgImHlrUsrDat::release_pri() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrDat.pri)
  
  ::XmsgImHlrUsrDatPri* temp = pri_;
  pri_ = NULL;
  return temp;
}
inline ::XmsgImHlrUsrDatPri* XmsgImHlrUsrDat::mutable_pri() {
  
  if (pri_ == NULL) {
    pri_ = new ::XmsgImHlrUsrDatPri;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrDat.pri)
  return pri_;
}
inline void XmsgImHlrUsrDat::set_allocated_pri(::XmsgImHlrUsrDatPri* pri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pri_;
  }
  if (pri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pri, submessage_arena);
    }
    
  } else {
    
  }
  pri_ = pri;
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrDat.pri)
}

// .XmsgImHlrUsrDatPub pub = 4;
inline bool XmsgImHlrUsrDat::has_pub() const {
  return this != internal_default_instance() && pub_ != NULL;
}
inline void XmsgImHlrUsrDat::clear_pub() {
  if (GetArenaNoVirtual() == NULL && pub_ != NULL) {
    delete pub_;
  }
  pub_ = NULL;
}
inline const ::XmsgImHlrUsrDatPub& XmsgImHlrUsrDat::pub() const {
  const ::XmsgImHlrUsrDatPub* p = pub_;
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.pub)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImHlrUsrDatPub*>(
      &::_XmsgImHlrUsrDatPub_default_instance_);
}
inline ::XmsgImHlrUsrDatPub* XmsgImHlrUsrDat::release_pub() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrDat.pub)
  
  ::XmsgImHlrUsrDatPub* temp = pub_;
  pub_ = NULL;
  return temp;
}
inline ::XmsgImHlrUsrDatPub* XmsgImHlrUsrDat::mutable_pub() {
  
  if (pub_ == NULL) {
    pub_ = new ::XmsgImHlrUsrDatPub;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrDat.pub)
  return pub_;
}
inline void XmsgImHlrUsrDat::set_allocated_pub(::XmsgImHlrUsrDatPub* pub) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pub_;
  }
  if (pub) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pub = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pub, submessage_arena);
    }
    
  } else {
    
  }
  pub_ = pub;
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrDat.pub)
}

// uint64 gts = 5;
inline void XmsgImHlrUsrDat::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrDat::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.gts)
  return gts_;
}
inline void XmsgImHlrUsrDat::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDat.gts)
}

// uint64 uts = 6;
inline void XmsgImHlrUsrDat::clear_uts() {
  uts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrDat::uts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDat.uts)
  return uts_;
}
inline void XmsgImHlrUsrDat::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDat.uts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrDatPri

// bool enable = 1;
inline void XmsgImHlrUsrDatPri::clear_enable() {
  enable_ = false;
}
inline bool XmsgImHlrUsrDatPri::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDatPri.enable)
  return enable_;
}
inline void XmsgImHlrUsrDatPri::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDatPri.enable)
}

// map<string, string> info = 2;
inline int XmsgImHlrUsrDatPri::info_size() const {
  return info_.size();
}
inline void XmsgImHlrUsrDatPri::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrDatPri::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrDatPri.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrDatPri::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrDatPri.info)
  return info_.MutableMap();
}

// uint64 sysEventVerRead = 3;
inline void XmsgImHlrUsrDatPri::clear_syseventverread() {
  syseventverread_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrDatPri::syseventverread() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDatPri.sysEventVerRead)
  return syseventverread_;
}
inline void XmsgImHlrUsrDatPri::set_syseventverread(::google::protobuf::uint64 value) {
  
  syseventverread_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDatPri.sysEventVerRead)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrDatPub

// string name = 1;
inline void XmsgImHlrUsrDatPub::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrDatPub::name() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrDatPub.name)
  return name_.GetNoArena();
}
inline void XmsgImHlrUsrDatPub::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrDatPub.name)
}
#if LANG_CXX11
inline void XmsgImHlrUsrDatPub::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrDatPub.name)
}
#endif
inline void XmsgImHlrUsrDatPub::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrDatPub.name)
}
inline void XmsgImHlrUsrDatPub::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrDatPub.name)
}
inline ::std::string* XmsgImHlrUsrDatPub::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrDatPub.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrDatPub::release_name() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrDatPub.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrDatPub::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrDatPub.name)
}

// map<string, string> info = 2;
inline int XmsgImHlrUsrDatPub::info_size() const {
  return info_.size();
}
inline void XmsgImHlrUsrDatPub::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrDatPub::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrDatPub.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrDatPub::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrDatPub.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInfoQueryReq

// map<string, string> ext = 1;
inline int XmsgImHlrUsrInfoQueryReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrUsrInfoQueryReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInfoQueryReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInfoQueryReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInfoQueryReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInfoQueryReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInfoQueryRsp

// map<string, string> info = 1;
inline int XmsgImHlrUsrInfoQueryRsp::info_size() const {
  return info_.size();
}
inline void XmsgImHlrUsrInfoQueryRsp::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInfoQueryRsp::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInfoQueryRsp.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInfoQueryRsp::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInfoQueryRsp.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInfoUpdateReq

// map<string, string> info = 1;
inline int XmsgImHlrUsrInfoUpdateReq::info_size() const {
  return info_.size();
}
inline void XmsgImHlrUsrInfoUpdateReq::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInfoUpdateReq::info() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInfoUpdateReq.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInfoUpdateReq::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInfoUpdateReq.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInfoUpdateRsp

// map<string, string> ext = 1;
inline int XmsgImHlrUsrInfoUpdateRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrUsrInfoUpdateRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInfoUpdateRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInfoUpdateRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInfoUpdateRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInfoUpdateRsp.ext)
  return ext_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2ddat_2eproto__INCLUDED
