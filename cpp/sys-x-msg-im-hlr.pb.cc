// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-hlr.proto

#include "sys-x-msg-im-hlr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthClientAttachSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleReq>
      _instance;
} _XmsgImAuthClientAttachSimpleReq_default_instance_;
class XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthClientAttachSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleRsp>
      _instance;
} _XmsgImAuthClientAttachSimpleRsp_default_instance_;
class XmsgImAuthUsrAuthInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryReq>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryReq_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryRsp>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryRsp_default_instance_;
class XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgRegisteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteReq>
      _instance;
} _XmsgImAuthOrgRegisteReq_default_instance_;
class XmsgImAuthOrgRegisteRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteRsp>
      _instance;
} _XmsgImAuthOrgRegisteRsp_default_instance_;
class XmsgImHlrUsrInitReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInitReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitReq>
      _instance;
} _XmsgImHlrUsrInitReq_default_instance_;
class XmsgImHlrUsrInitRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInitRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitRsp>
      _instance;
} _XmsgImHlrUsrInitRsp_default_instance_;
class XmsgImHlrUsrAuthInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryReq>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryReq_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryRsp>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryRsp_default_instance_;
class XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubReq>
      _instance;
} _XmsgImHlrChannelStatusSubReq_default_instance_;
class XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusSubRsp>
      _instance;
} _XmsgImHlrChannelStatusSubRsp_default_instance_;
class XmsgImHlrChannelStatusPubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubReq>
      _instance;
} _XmsgImHlrChannelStatusPubReq_default_instance_;
class XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrChannelStatusPubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusPubRsp>
      _instance;
} _XmsgImHlrChannelStatusPubRsp_default_instance_;
class XmsgImHlrChannelStatusChangedNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrChannelStatusChangedNotice>
      _instance;
} _XmsgImHlrChannelStatusChangedNotice_default_instance_;
class XmsgApClientKickReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickReq>
      _instance;
} _XmsgApClientKickReq_default_instance_;
class XmsgApClientKickRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgApClientKickRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickRsp>
      _instance;
} _XmsgApClientKickRsp_default_instance_;
class XmsgApClientLostNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientLostNotice>
      _instance;
} _XmsgApClientLostNotice_default_instance_;
class XmsgApClientEstbNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientEstbNotice>
      _instance;
} _XmsgApClientEstbNotice_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoReq>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoReq_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoRsp>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_;
class XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImMgrHlrSendSysNoticeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrHlrSendSysNoticeReq>
      _instance;
} _XmsgImMgrHlrSendSysNoticeReq_default_instance_;
class XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImMgrHlrSendSysNoticeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrHlrSendSysNoticeRsp>
      _instance;
} _XmsgImMgrHlrSendSysNoticeRsp_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto {
void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleReq_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthClientAttachSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleReqImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleRsp_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthClientAttachSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleRspImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthUsrAuthInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthUsrAuthInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  }
  ::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgRegisteReq_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgRegisteReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteReqImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgRegisteRsp_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgRegisteRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteRspImpl);
}

void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrInitReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrInitReq_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrInitReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitReqImpl);
}

void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrInitRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrInitRsp_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrInitRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitRspImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrAuthInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrAuthInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubReq_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubReqImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusSubRsp_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusSubRspImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubReq_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusPubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubReqImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrChannelStatusPubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrChannelStatusPubRsp_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusPubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusPubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusPubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusPubRspImpl);
}

void InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrChannelStatusChangedNotice_default_instance_;
    new (ptr) ::XmsgImHlrChannelStatusChangedNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrChannelStatusChangedNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrChannelStatusChangedNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrChannelStatusChangedNoticeImpl);
}

void InitDefaultsXmsgApClientKickReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientKickReq_default_instance_;
    new (ptr) ::XmsgApClientKickReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientKickReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickReqImpl);
}

void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgApClientKickRsp_ExtEntry_DoNotUse();
  }
  ::XmsgApClientKickRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgApClientKickRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgApClientKickRsp_default_instance_;
    new (ptr) ::XmsgApClientKickRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientKickRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickRspImpl);
}

void InitDefaultsXmsgApClientLostNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientLostNotice_default_instance_;
    new (ptr) ::XmsgApClientLostNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientLostNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientLostNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientLostNoticeImpl);
}

void InitDefaultsXmsgApClientEstbNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientEstbNotice_default_instance_;
    new (ptr) ::XmsgApClientEstbNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientEstbNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientEstbNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientEstbNoticeImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  }
  ::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoReq_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgUpdateAccountInfoReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgUpdateAccountInfoRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl);
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse();
  }
  ::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImMgrHlrSendSysNoticeReq_default_instance_;
    new (ptr) ::XmsgImMgrHlrSendSysNoticeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrHlrSendSysNoticeReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrHlrSendSysNoticeReqImpl);
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImMgrHlrSendSysNoticeRsp_default_instance_;
    new (ptr) ::XmsgImMgrHlrSendSysNoticeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrHlrSendSysNoticeRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrHlrSendSysNoticeRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrHlrSendSysNoticeRspImpl);
}

::google::protobuf::Metadata file_level_metadata[38];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, salt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteRsp, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusSubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubReq, more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusPubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrChannelStatusChangedNotice, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickReq, ccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, ccid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, ccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, upsert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq, dat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrHlrSendSysNoticeRsp, ext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgImAuthClientAttachSimpleReq)},
  { 20, 27, sizeof(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse)},
  { 29, -1, sizeof(::XmsgImAuthClientAttachSimpleRsp)},
  { 40, -1, sizeof(::XmsgImAuthUsrAuthInfoQueryReq)},
  { 47, 54, sizeof(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse)},
  { 56, -1, sizeof(::XmsgImAuthUsrAuthInfoQueryRsp)},
  { 66, 73, sizeof(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse)},
  { 75, -1, sizeof(::XmsgImAuthOrgRegisteReq)},
  { 82, -1, sizeof(::XmsgImAuthOrgRegisteRsp)},
  { 88, 95, sizeof(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse)},
  { 97, -1, sizeof(::XmsgImHlrUsrInitReq)},
  { 104, 111, sizeof(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse)},
  { 113, -1, sizeof(::XmsgImHlrUsrInitRsp)},
  { 119, -1, sizeof(::XmsgImHlrUsrAuthInfoQueryReq)},
  { 126, 133, sizeof(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse)},
  { 135, -1, sizeof(::XmsgImHlrUsrAuthInfoQueryRsp)},
  { 145, 152, sizeof(::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse)},
  { 154, -1, sizeof(::XmsgImHlrChannelStatusSubReq)},
  { 160, 167, sizeof(::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse)},
  { 169, -1, sizeof(::XmsgImHlrChannelStatusSubRsp)},
  { 175, -1, sizeof(::XmsgImHlrChannelStatusPubReq)},
  { 182, 189, sizeof(::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse)},
  { 191, -1, sizeof(::XmsgImHlrChannelStatusPubRsp)},
  { 197, -1, sizeof(::XmsgImHlrChannelStatusChangedNotice)},
  { 206, -1, sizeof(::XmsgApClientKickReq)},
  { 212, 219, sizeof(::XmsgApClientKickRsp_ExtEntry_DoNotUse)},
  { 221, -1, sizeof(::XmsgApClientKickRsp)},
  { 227, -1, sizeof(::XmsgApClientLostNotice)},
  { 237, -1, sizeof(::XmsgApClientEstbNotice)},
  { 247, 254, sizeof(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse)},
  { 256, -1, sizeof(::XmsgImAuthOrgUpdateAccountInfoReq)},
  { 264, 271, sizeof(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse)},
  { 273, -1, sizeof(::XmsgImAuthOrgUpdateAccountInfoRsp)},
  { 279, 286, sizeof(::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse)},
  { 288, -1, sizeof(::XmsgImMgrHlrSendSysNoticeReq)},
  { 297, 304, sizeof(::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse)},
  { 306, -1, sizeof(::XmsgImMgrHlrSendSysNoticeRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusPubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrChannelStatusChangedNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientLostNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientEstbNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrHlrSendSysNoticeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrHlrSendSysNoticeRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-im-hlr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 38);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026sys-x-msg-im-hlr.proto\032\027net-x-msg-im-a"
      "uth.proto\"\312\001\n\037XmsgImAuthClientAttachSimp"
      "leReq\022\r\n\005token\030\001 \001(\t\022\014\n\004salt\030\002 \001(\t\022\014\n\004si"
      "gn\030\003 \001(\t\022\013\n\003alg\030\004 \001(\t\022\013\n\003cgt\030\005 \001(\t\0226\n\003ex"
      "t\030\006 \003(\0132).XmsgImAuthClientAttachSimpleRe"
      "q.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\t:\0028\001\"\347\001\n\037XmsgImAuthClientAttac"
      "hSimpleRsp\022\013\n\003usr\030\001 \001(\t\022\016\n\006secret\030\002 \001(\t\022"
      "\013\n\003gts\030\003 \001(\004\022\017\n\007expired\030\004 \001(\004\022%\n\004info\030\005 "
      "\001(\0132\027.XmsgImClientDeviceInfo\0226\n\003ext\030\006 \003("
      "\0132).XmsgImAuthClientAttachSimpleRsp.ExtE"
      "ntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t:\0028\001\";\n\035XmsgImAuthUsrAuthInfoQueryRe"
      "q\022\r\n\005token\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\"\326\001\n\035XmsgIm"
      "AuthUsrAuthInfoQueryRsp\022\016\n\006secret\030\001 \001(\t\022"
      "\013\n\003gts\030\002 \001(\004\022\017\n\007expired\030\003 \001(\004\022%\n\004info\030\004 "
      "\001(\0132\027.XmsgImClientDeviceInfo\0224\n\003ext\030\005 \003("
      "\0132\'.XmsgImAuthUsrAuthInfoQueryRsp.ExtEnt"
      "ry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"\210\001\n\027XmsgImAuthOrgRegisteReq\022\016\n\006en"
      "able\030\001 \001(\010\0220\n\004info\030\002 \003(\0132\".XmsgImAuthOrg"
      "RegisteReq.InfoEntry\032+\n\tInfoEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"&\n\027XmsgImAuthO"
      "rgRegisteRsp\022\013\n\003cgt\030\001 \001(\t\"z\n\023XmsgImHlrUs"
      "rInitReq\022\013\n\003cgt\030\001 \001(\t\022*\n\003ext\030\002 \003(\0132\035.Xms"
      "gImHlrUsrInitReq.ExtEntry\032*\n\010ExtEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"m\n\023XmsgImH"
      "lrUsrInitRsp\022*\n\003ext\030\001 \003(\0132\035.XmsgImHlrUsr"
      "InitRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t:\0028\001\":\n\034XmsgImHlrUsrAuth"
      "InfoQueryReq\022\r\n\005token\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t"
      "\"\324\001\n\034XmsgImHlrUsrAuthInfoQueryRsp\022\016\n\006sec"
      "ret\030\001 \001(\t\022\013\n\003gts\030\002 \001(\004\022\017\n\007expired\030\003 \001(\004\022"
      "%\n\004info\030\004 \001(\0132\027.XmsgImClientDeviceInfo\0223"
      "\n\003ext\030\005 \003(\0132&.XmsgImHlrUsrAuthInfoQueryR"
      "sp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\t:\0028\001\"\177\n\034XmsgImHlrChannelStatu"
      "sSubReq\0223\n\003ext\030\001 \003(\0132&.XmsgImHlrChannelS"
      "tatusSubReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\177\n\034XmsgImHlrCha"
      "nnelStatusSubRsp\0223\n\003ext\030\001 \003(\0132&.XmsgImHl"
      "rChannelStatusSubRsp.ExtEntry\032*\n\010ExtEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"b\n\034Xms"
      "gImHlrChannelStatusPubReq\0224\n\006notice\030\001 \003("
      "\0132$.XmsgImHlrChannelStatusChangedNotice\022"
      "\014\n\004more\030\002 \001(\010\"\177\n\034XmsgImHlrChannelStatusP"
      "ubRsp\0223\n\003ext\030\001 \003(\0132&.XmsgImHlrChannelSta"
      "tusPubRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"]\n#XmsgImHlrChann"
      "elStatusChangedNotice\022\013\n\003cgt\030\001 \001(\t\022\014\n\004pl"
      "at\030\002 \001(\t\022\013\n\003did\030\003 \001(\t\022\016\n\006status\030\004 \001(\t\"#\n"
      "\023XmsgApClientKickReq\022\014\n\004ccid\030\001 \001(\t\"m\n\023Xm"
      "sgApClientKickRsp\022*\n\003ext\030\001 \003(\0132\035.XmsgApC"
      "lientKickRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"]\n\026XmsgApClien"
      "tLostNotice\022\r\n\005apCgt\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\022"
      "\014\n\004plat\030\003 \001(\t\022\013\n\003did\030\004 \001(\t\022\014\n\004ccid\030\005 \001(\t"
      "\"]\n\026XmsgApClientEstbNotice\022\r\n\005apCgt\030\001 \001("
      "\t\022\013\n\003cgt\030\002 \001(\t\022\014\n\004plat\030\003 \001(\t\022\013\n\003did\030\004 \001("
      "\t\022\014\n\004ccid\030\005 \001(\t\"\257\001\n!XmsgImAuthOrgUpdateA"
      "ccountInfoReq\022\013\n\003cgt\030\001 \001(\t\022>\n\006upsert\030\002 \003"
      "(\0132..XmsgImAuthOrgUpdateAccountInfoReq.U"
      "psertEntry\022\016\n\006remove\030\003 \003(\t\032-\n\013UpsertEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\211\001\n!Xm"
      "sgImAuthOrgUpdateAccountInfoRsp\0228\n\003ext\030\001"
      " \003(\0132+.XmsgImAuthOrgUpdateAccountInfoRsp"
      ".ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t:\0028\001\"\252\001\n\034XmsgImMgrHlrSendSysNot"
      "iceReq\022\013\n\003msg\030\001 \001(\t\022\013\n\003dat\030\002 \001(\014\022\017\n\007expi"
      "red\030\003 \001(\004\0223\n\003ext\030\004 \003(\0132&.XmsgImMgrHlrSen"
      "dSysNoticeReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\177\n\034XmsgImMgrH"
      "lrSendSysNoticeRsp\0223\n\003ext\030\004 \003(\0132&.XmsgIm"
      "MgrHlrSendSysNoticeRsp.ExtEntry\032*\n\010ExtEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\033\n\010x"
      ".msg.pbB\017XmsgImAuthSysPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3032);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-im-hlr.proto", &protobuf_RegisterTypes);
  ::protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto

// ===================================================================

XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse() {}
XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[0];
}
void XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthClientAttachSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthClientAttachSimpleReq::kTokenFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kSaltFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kSignFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kAlgFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kCgtFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthClientAttachSimpleReq::XmsgImAuthClientAttachSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthClientAttachSimpleReq)
}
XmsgImAuthClientAttachSimpleReq::XmsgImAuthClientAttachSimpleReq(const XmsgImAuthClientAttachSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.salt().size() > 0) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alg().size() > 0) {
    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthClientAttachSimpleReq)
}

void XmsgImAuthClientAttachSimpleReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthClientAttachSimpleReq::~XmsgImAuthClientAttachSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthClientAttachSimpleReq)
  SharedDtor();
}

void XmsgImAuthClientAttachSimpleReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthClientAttachSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthClientAttachSimpleReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthClientAttachSimpleReq& XmsgImAuthClientAttachSimpleReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq();
  return *internal_default_instance();
}

XmsgImAuthClientAttachSimpleReq* XmsgImAuthClientAttachSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthClientAttachSimpleReq* n = new XmsgImAuthClientAttachSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthClientAttachSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthClientAttachSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthClientAttachSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string salt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_salt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->salt().data(), static_cast<int>(this->salt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.salt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alg().data(), static_cast<int>(this->alg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.alg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthClientAttachSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthClientAttachSimpleReq)
  return false;
#undef DO_
}

void XmsgImAuthClientAttachSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->salt().data(), static_cast<int>(this->salt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.salt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->salt(), output);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sign(), output);
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.alg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alg(), output);
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cgt(), output);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthClientAttachSimpleReq)
}

::google::protobuf::uint8* XmsgImAuthClientAttachSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->salt().data(), static_cast<int>(this->salt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.salt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->salt(), target);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.alg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alg(), target);
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cgt(), target);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthClientAttachSimpleReq)
  return target;
}

size_t XmsgImAuthClientAttachSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthClientAttachSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->salt());
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alg());
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthClientAttachSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthClientAttachSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthClientAttachSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthClientAttachSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthClientAttachSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthClientAttachSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthClientAttachSimpleReq::MergeFrom(const XmsgImAuthClientAttachSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthClientAttachSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.salt().size() > 0) {

    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.alg().size() > 0) {

    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthClientAttachSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthClientAttachSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthClientAttachSimpleReq::CopyFrom(const XmsgImAuthClientAttachSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthClientAttachSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthClientAttachSimpleReq::IsInitialized() const {
  return true;
}

void XmsgImAuthClientAttachSimpleReq::Swap(XmsgImAuthClientAttachSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthClientAttachSimpleReq::InternalSwap(XmsgImAuthClientAttachSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  token_.Swap(&other->token_);
  salt_.Swap(&other->salt_);
  sign_.Swap(&other->sign_);
  alg_.Swap(&other->alg_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthClientAttachSimpleReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse() {}
XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[2];
}
void XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthClientAttachSimpleRsp::InitAsDefaultInstance() {
  ::_XmsgImAuthClientAttachSimpleRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
void XmsgImAuthClientAttachSimpleRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthClientAttachSimpleRsp::kUsrFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kSecretFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kGtsFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kExpiredFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kInfoFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthClientAttachSimpleRsp::XmsgImAuthClientAttachSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthClientAttachSimpleRsp)
}
XmsgImAuthClientAttachSimpleRsp::XmsgImAuthClientAttachSimpleRsp(const XmsgImAuthClientAttachSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usr().size() > 0) {
    usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthClientAttachSimpleRsp)
}

void XmsgImAuthClientAttachSimpleRsp::SharedCtor() {
  usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImAuthClientAttachSimpleRsp::~XmsgImAuthClientAttachSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthClientAttachSimpleRsp)
  SharedDtor();
}

void XmsgImAuthClientAttachSimpleRsp::SharedDtor() {
  usr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImAuthClientAttachSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthClientAttachSimpleRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthClientAttachSimpleRsp& XmsgImAuthClientAttachSimpleRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp();
  return *internal_default_instance();
}

XmsgImAuthClientAttachSimpleRsp* XmsgImAuthClientAttachSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthClientAttachSimpleRsp* n = new XmsgImAuthClientAttachSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthClientAttachSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImAuthClientAttachSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthClientAttachSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string usr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr().data(), static_cast<int>(this->usr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.usr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthClientAttachSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthClientAttachSimpleRsp)
  return false;
#undef DO_
}

void XmsgImAuthClientAttachSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string usr = 1;
  if (this->usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr().data(), static_cast<int>(this->usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.usr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr(), output);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret(), output);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gts(), output);
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthClientAttachSimpleRsp)
}

::google::protobuf::uint8* XmsgImAuthClientAttachSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string usr = 1;
  if (this->usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr().data(), static_cast<int>(this->usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.usr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->usr(), target);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secret(), target);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gts(), target);
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthClientAttachSimpleRsp)
  return target;
}

size_t XmsgImAuthClientAttachSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthClientAttachSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string usr = 1;
  if (this->usr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr());
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthClientAttachSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthClientAttachSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthClientAttachSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthClientAttachSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthClientAttachSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthClientAttachSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthClientAttachSimpleRsp::MergeFrom(const XmsgImAuthClientAttachSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthClientAttachSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.usr().size() > 0) {

    usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_);
  }
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImAuthClientAttachSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthClientAttachSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthClientAttachSimpleRsp::CopyFrom(const XmsgImAuthClientAttachSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthClientAttachSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthClientAttachSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthClientAttachSimpleRsp::Swap(XmsgImAuthClientAttachSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthClientAttachSimpleRsp::InternalSwap(XmsgImAuthClientAttachSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  usr_.Swap(&other->usr_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthClientAttachSimpleRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImAuthUsrAuthInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthUsrAuthInfoQueryReq::kTokenFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthUsrAuthInfoQueryReq::XmsgImAuthUsrAuthInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthUsrAuthInfoQueryReq)
}
XmsgImAuthUsrAuthInfoQueryReq::XmsgImAuthUsrAuthInfoQueryReq(const XmsgImAuthUsrAuthInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthUsrAuthInfoQueryReq)
}

void XmsgImAuthUsrAuthInfoQueryReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthUsrAuthInfoQueryReq::~XmsgImAuthUsrAuthInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthUsrAuthInfoQueryReq)
  SharedDtor();
}

void XmsgImAuthUsrAuthInfoQueryReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthUsrAuthInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthUsrAuthInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthUsrAuthInfoQueryReq& XmsgImAuthUsrAuthInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
  return *internal_default_instance();
}

XmsgImAuthUsrAuthInfoQueryReq* XmsgImAuthUsrAuthInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthUsrAuthInfoQueryReq* n = new XmsgImAuthUsrAuthInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthUsrAuthInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthUsrAuthInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthUsrAuthInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthUsrAuthInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthUsrAuthInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImAuthUsrAuthInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthUsrAuthInfoQueryReq)
}

::google::protobuf::uint8* XmsgImAuthUsrAuthInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthUsrAuthInfoQueryReq)
  return target;
}

size_t XmsgImAuthUsrAuthInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthUsrAuthInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthUsrAuthInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthUsrAuthInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthUsrAuthInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthUsrAuthInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthUsrAuthInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthUsrAuthInfoQueryReq::MergeFrom(const XmsgImAuthUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthUsrAuthInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthUsrAuthInfoQueryReq::CopyFrom(const XmsgImAuthUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthUsrAuthInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImAuthUsrAuthInfoQueryReq::Swap(XmsgImAuthUsrAuthInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthUsrAuthInfoQueryReq::InternalSwap(XmsgImAuthUsrAuthInfoQueryReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {}
XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[5];
}
void XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthUsrAuthInfoQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
void XmsgImAuthUsrAuthInfoQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthUsrAuthInfoQueryRsp::kSecretFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kGtsFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kExpiredFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kInfoFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthUsrAuthInfoQueryRsp::XmsgImAuthUsrAuthInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthUsrAuthInfoQueryRsp)
}
XmsgImAuthUsrAuthInfoQueryRsp::XmsgImAuthUsrAuthInfoQueryRsp(const XmsgImAuthUsrAuthInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthUsrAuthInfoQueryRsp)
}

void XmsgImAuthUsrAuthInfoQueryRsp::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImAuthUsrAuthInfoQueryRsp::~XmsgImAuthUsrAuthInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthUsrAuthInfoQueryRsp)
  SharedDtor();
}

void XmsgImAuthUsrAuthInfoQueryRsp::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImAuthUsrAuthInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthUsrAuthInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthUsrAuthInfoQueryRsp& XmsgImAuthUsrAuthInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImAuthUsrAuthInfoQueryRsp* XmsgImAuthUsrAuthInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthUsrAuthInfoQueryRsp* n = new XmsgImAuthUsrAuthInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthUsrAuthInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImAuthUsrAuthInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthUsrAuthInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string secret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthUsrAuthInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthUsrAuthInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImAuthUsrAuthInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->secret(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthUsrAuthInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImAuthUsrAuthInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secret(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthUsrAuthInfoQueryRsp)
  return target;
}

size_t XmsgImAuthUsrAuthInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthUsrAuthInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string secret = 1;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthUsrAuthInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthUsrAuthInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthUsrAuthInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthUsrAuthInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthUsrAuthInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthUsrAuthInfoQueryRsp::MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImAuthUsrAuthInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthUsrAuthInfoQueryRsp::CopyFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthUsrAuthInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthUsrAuthInfoQueryRsp::Swap(XmsgImAuthUsrAuthInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthUsrAuthInfoQueryRsp::InternalSwap(XmsgImAuthUsrAuthInfoQueryRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse() {}
XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[7];
}
void XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgRegisteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgRegisteReq::kEnableFieldNumber;
const int XmsgImAuthOrgRegisteReq::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgRegisteReq::XmsgImAuthOrgRegisteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgRegisteReq)
}
XmsgImAuthOrgRegisteReq::XmsgImAuthOrgRegisteReq(const XmsgImAuthOrgRegisteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  enable_ = from.enable_;
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgRegisteReq)
}

void XmsgImAuthOrgRegisteReq::SharedCtor() {
  enable_ = false;
  _cached_size_ = 0;
}

XmsgImAuthOrgRegisteReq::~XmsgImAuthOrgRegisteReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgRegisteReq)
  SharedDtor();
}

void XmsgImAuthOrgRegisteReq::SharedDtor() {
}

void XmsgImAuthOrgRegisteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgRegisteReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgRegisteReq& XmsgImAuthOrgRegisteReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq();
  return *internal_default_instance();
}

XmsgImAuthOrgRegisteReq* XmsgImAuthOrgRegisteReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgRegisteReq* n = new XmsgImAuthOrgRegisteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgRegisteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  enable_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgRegisteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgRegisteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteReq.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteReq.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgRegisteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgRegisteReq)
  return false;
#undef DO_
}

void XmsgImAuthOrgRegisteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable(), output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgRegisteReq)
}

::google::protobuf::uint8* XmsgImAuthOrgRegisteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable(), target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgRegisteReq)
  return target;
}

size_t XmsgImAuthOrgRegisteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgRegisteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool enable = 1;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgRegisteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgRegisteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgRegisteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgRegisteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgRegisteReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgRegisteReq::MergeFrom(const XmsgImAuthOrgRegisteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImAuthOrgRegisteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgRegisteReq::CopyFrom(const XmsgImAuthOrgRegisteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgRegisteReq::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgRegisteReq::Swap(XmsgImAuthOrgRegisteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgRegisteReq::InternalSwap(XmsgImAuthOrgRegisteReq* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgRegisteReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImAuthOrgRegisteRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgRegisteRsp::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgRegisteRsp::XmsgImAuthOrgRegisteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgRegisteRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgRegisteRsp)
}
XmsgImAuthOrgRegisteRsp::XmsgImAuthOrgRegisteRsp(const XmsgImAuthOrgRegisteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgRegisteRsp)
}

void XmsgImAuthOrgRegisteRsp::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthOrgRegisteRsp::~XmsgImAuthOrgRegisteRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgRegisteRsp)
  SharedDtor();
}

void XmsgImAuthOrgRegisteRsp::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthOrgRegisteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgRegisteRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgRegisteRsp& XmsgImAuthOrgRegisteRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgRegisteRsp();
  return *internal_default_instance();
}

XmsgImAuthOrgRegisteRsp* XmsgImAuthOrgRegisteRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgRegisteRsp* n = new XmsgImAuthOrgRegisteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgRegisteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgRegisteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgRegisteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteRsp.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgRegisteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgRegisteRsp)
  return false;
#undef DO_
}

void XmsgImAuthOrgRegisteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgRegisteRsp.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgRegisteRsp)
}

::google::protobuf::uint8* XmsgImAuthOrgRegisteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgRegisteRsp.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgRegisteRsp)
  return target;
}

size_t XmsgImAuthOrgRegisteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgRegisteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgRegisteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgRegisteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgRegisteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgRegisteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgRegisteRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgRegisteRsp::MergeFrom(const XmsgImAuthOrgRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthOrgRegisteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgRegisteRsp::CopyFrom(const XmsgImAuthOrgRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgRegisteRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgRegisteRsp::Swap(XmsgImAuthOrgRegisteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgRegisteRsp::InternalSwap(XmsgImAuthOrgRegisteRsp* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgRegisteRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse() {}
XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrInitReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[10];
}
void XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrInitReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrInitReq::kCgtFieldNumber;
const int XmsgImHlrUsrInitReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrInitReq::XmsgImHlrUsrInitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrInitReq)
}
XmsgImHlrUsrInitReq::XmsgImHlrUsrInitReq(const XmsgImHlrUsrInitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrInitReq)
}

void XmsgImHlrUsrInitReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrUsrInitReq::~XmsgImHlrUsrInitReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrInitReq)
  SharedDtor();
}

void XmsgImHlrUsrInitReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrUsrInitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrInitReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrInitReq& XmsgImHlrUsrInitReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitReq();
  return *internal_default_instance();
}

XmsgImHlrUsrInitReq* XmsgImHlrUsrInitReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrInitReq* n = new XmsgImHlrUsrInitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrInitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrInitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrInitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrInitReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrInitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrInitReq)
  return false;
#undef DO_
}

void XmsgImHlrUsrInitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrInitReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrInitReq)
}

::google::protobuf::uint8* XmsgImHlrUsrInitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrInitReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrInitReq)
  return target;
}

size_t XmsgImHlrUsrInitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrInitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrInitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrInitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrInitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrInitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrInitReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrInitReq::MergeFrom(const XmsgImHlrUsrInitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImHlrUsrInitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrInitReq::CopyFrom(const XmsgImHlrUsrInitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrInitReq::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrInitReq::Swap(XmsgImHlrUsrInitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrInitReq::InternalSwap(XmsgImHlrUsrInitReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrInitReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse() {}
XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[12];
}
void XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrInitRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrInitRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrInitRsp::XmsgImHlrUsrInitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrInitRsp)
}
XmsgImHlrUsrInitRsp::XmsgImHlrUsrInitRsp(const XmsgImHlrUsrInitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrInitRsp)
}

void XmsgImHlrUsrInitRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrUsrInitRsp::~XmsgImHlrUsrInitRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrInitRsp)
  SharedDtor();
}

void XmsgImHlrUsrInitRsp::SharedDtor() {
}

void XmsgImHlrUsrInitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrInitRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrInitRsp& XmsgImHlrUsrInitRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrInitRsp();
  return *internal_default_instance();
}

XmsgImHlrUsrInitRsp* XmsgImHlrUsrInitRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrInitRsp* n = new XmsgImHlrUsrInitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrInitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrInitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrInitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrInitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrInitRsp)
  return false;
#undef DO_
}

void XmsgImHlrUsrInitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrInitRsp)
}

::google::protobuf::uint8* XmsgImHlrUsrInitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrInitRsp)
  return target;
}

size_t XmsgImHlrUsrInitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrInitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrInitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrInitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrInitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrInitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrInitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrInitRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrInitRsp::MergeFrom(const XmsgImHlrUsrInitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrInitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrUsrInitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrInitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrInitRsp::CopyFrom(const XmsgImHlrUsrInitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrInitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrInitRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrInitRsp::Swap(XmsgImHlrUsrInitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrInitRsp::InternalSwap(XmsgImHlrUsrInitRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrInitRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrUsrAuthInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrAuthInfoQueryReq::kTokenFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrAuthInfoQueryReq::XmsgImHlrUsrAuthInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrAuthInfoQueryReq)
}
XmsgImHlrUsrAuthInfoQueryReq::XmsgImHlrUsrAuthInfoQueryReq(const XmsgImHlrUsrAuthInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrAuthInfoQueryReq)
}

void XmsgImHlrUsrAuthInfoQueryReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrUsrAuthInfoQueryReq::~XmsgImHlrUsrAuthInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrAuthInfoQueryReq)
  SharedDtor();
}

void XmsgImHlrUsrAuthInfoQueryReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrUsrAuthInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrAuthInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrAuthInfoQueryReq& XmsgImHlrUsrAuthInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
  return *internal_default_instance();
}

XmsgImHlrUsrAuthInfoQueryReq* XmsgImHlrUsrAuthInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrAuthInfoQueryReq* n = new XmsgImHlrUsrAuthInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrAuthInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrAuthInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrAuthInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrAuthInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrAuthInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImHlrUsrAuthInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrAuthInfoQueryReq)
}

::google::protobuf::uint8* XmsgImHlrUsrAuthInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrAuthInfoQueryReq)
  return target;
}

size_t XmsgImHlrUsrAuthInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrAuthInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrAuthInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrAuthInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrAuthInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrAuthInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrAuthInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrAuthInfoQueryReq::MergeFrom(const XmsgImHlrUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImHlrUsrAuthInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrAuthInfoQueryReq::CopyFrom(const XmsgImHlrUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrAuthInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrAuthInfoQueryReq::Swap(XmsgImHlrUsrAuthInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrAuthInfoQueryReq::InternalSwap(XmsgImHlrUsrAuthInfoQueryReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {}
XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[15];
}
void XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrAuthInfoQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
void XmsgImHlrUsrAuthInfoQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrAuthInfoQueryRsp::kSecretFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kGtsFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kExpiredFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kInfoFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrAuthInfoQueryRsp::XmsgImHlrUsrAuthInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrAuthInfoQueryRsp)
}
XmsgImHlrUsrAuthInfoQueryRsp::XmsgImHlrUsrAuthInfoQueryRsp(const XmsgImHlrUsrAuthInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrAuthInfoQueryRsp)
}

void XmsgImHlrUsrAuthInfoQueryRsp::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImHlrUsrAuthInfoQueryRsp::~XmsgImHlrUsrAuthInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrAuthInfoQueryRsp)
  SharedDtor();
}

void XmsgImHlrUsrAuthInfoQueryRsp::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImHlrUsrAuthInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrAuthInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrAuthInfoQueryRsp& XmsgImHlrUsrAuthInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImHlrUsrAuthInfoQueryRsp* XmsgImHlrUsrAuthInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrAuthInfoQueryRsp* n = new XmsgImHlrUsrAuthInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrAuthInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrAuthInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrAuthInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string secret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrAuthInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrAuthInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImHlrUsrAuthInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->secret(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrAuthInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImHlrUsrAuthInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secret(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrAuthInfoQueryRsp)
  return target;
}

size_t XmsgImHlrUsrAuthInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrAuthInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string secret = 1;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrAuthInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrAuthInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrAuthInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrAuthInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrAuthInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrAuthInfoQueryRsp::MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImHlrUsrAuthInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrAuthInfoQueryRsp::CopyFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrAuthInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrAuthInfoQueryRsp::Swap(XmsgImHlrUsrAuthInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrAuthInfoQueryRsp::InternalSwap(XmsgImHlrUsrAuthInfoQueryRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[17];
}
void XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusSubReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusSubReq::XmsgImHlrChannelStatusSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusSubReq)
}
XmsgImHlrChannelStatusSubReq::XmsgImHlrChannelStatusSubReq(const XmsgImHlrChannelStatusSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusSubReq)
}

void XmsgImHlrChannelStatusSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusSubReq::~XmsgImHlrChannelStatusSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusSubReq)
  SharedDtor();
}

void XmsgImHlrChannelStatusSubReq::SharedDtor() {
}

void XmsgImHlrChannelStatusSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusSubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusSubReq& XmsgImHlrChannelStatusSubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubReq();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusSubReq* XmsgImHlrChannelStatusSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusSubReq* n = new XmsgImHlrChannelStatusSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusSubReq)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusSubReq)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusSubReq)
  return target;
}

size_t XmsgImHlrChannelStatusSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusSubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusSubReq::MergeFrom(const XmsgImHlrChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusSubReq::CopyFrom(const XmsgImHlrChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusSubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusSubReq::Swap(XmsgImHlrChannelStatusSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusSubReq::InternalSwap(XmsgImHlrChannelStatusSubReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusSubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[19];
}
void XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusSubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusSubRsp::XmsgImHlrChannelStatusSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusSubRsp)
}
XmsgImHlrChannelStatusSubRsp::XmsgImHlrChannelStatusSubRsp(const XmsgImHlrChannelStatusSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusSubRsp)
}

void XmsgImHlrChannelStatusSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusSubRsp::~XmsgImHlrChannelStatusSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusSubRsp)
  SharedDtor();
}

void XmsgImHlrChannelStatusSubRsp::SharedDtor() {
}

void XmsgImHlrChannelStatusSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusSubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusSubRsp& XmsgImHlrChannelStatusSubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusSubRsp();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusSubRsp* XmsgImHlrChannelStatusSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusSubRsp* n = new XmsgImHlrChannelStatusSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusSubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusSubRsp)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusSubRsp)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusSubRsp)
  return target;
}

size_t XmsgImHlrChannelStatusSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusSubRsp::MergeFrom(const XmsgImHlrChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusSubRsp::CopyFrom(const XmsgImHlrChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusSubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusSubRsp::Swap(XmsgImHlrChannelStatusSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusSubRsp::InternalSwap(XmsgImHlrChannelStatusSubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusSubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrChannelStatusPubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusPubReq::kNoticeFieldNumber;
const int XmsgImHlrChannelStatusPubReq::kMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusPubReq::XmsgImHlrChannelStatusPubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusPubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusPubReq)
}
XmsgImHlrChannelStatusPubReq::XmsgImHlrChannelStatusPubReq(const XmsgImHlrChannelStatusPubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notice_(from.notice_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  more_ = from.more_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusPubReq)
}

void XmsgImHlrChannelStatusPubReq::SharedCtor() {
  more_ = false;
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusPubReq::~XmsgImHlrChannelStatusPubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusPubReq)
  SharedDtor();
}

void XmsgImHlrChannelStatusPubReq::SharedDtor() {
}

void XmsgImHlrChannelStatusPubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusPubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusPubReq& XmsgImHlrChannelStatusPubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusPubReq();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusPubReq* XmsgImHlrChannelStatusPubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusPubReq* n = new XmsgImHlrChannelStatusPubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusPubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notice_.Clear();
  more_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusPubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusPubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool more = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusPubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusPubReq)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusPubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notice(static_cast<int>(i)), output);
  }

  // bool more = 2;
  if (this->more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->more(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusPubReq)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusPubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notice(static_cast<int>(i)), deterministic, target);
  }

  // bool more = 2;
  if (this->more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->more(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusPubReq)
  return target;
}

size_t XmsgImHlrChannelStatusPubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusPubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImHlrChannelStatusChangedNotice notice = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notice(static_cast<int>(i)));
    }
  }

  // bool more = 2;
  if (this->more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusPubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusPubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusPubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusPubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusPubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusPubReq::MergeFrom(const XmsgImHlrChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notice_.MergeFrom(from.notice_);
  if (from.more() != 0) {
    set_more(from.more());
  }
}

void XmsgImHlrChannelStatusPubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusPubReq::CopyFrom(const XmsgImHlrChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusPubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusPubReq::Swap(XmsgImHlrChannelStatusPubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusPubReq::InternalSwap(XmsgImHlrChannelStatusPubReq* other) {
  using std::swap;
  notice_.InternalSwap(&other->notice_);
  swap(more_, other->more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusPubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse() {}
XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[22];
}
void XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrChannelStatusPubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusPubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusPubRsp::XmsgImHlrChannelStatusPubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusPubRsp)
}
XmsgImHlrChannelStatusPubRsp::XmsgImHlrChannelStatusPubRsp(const XmsgImHlrChannelStatusPubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusPubRsp)
}

void XmsgImHlrChannelStatusPubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusPubRsp::~XmsgImHlrChannelStatusPubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusPubRsp)
  SharedDtor();
}

void XmsgImHlrChannelStatusPubRsp::SharedDtor() {
}

void XmsgImHlrChannelStatusPubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusPubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusPubRsp& XmsgImHlrChannelStatusPubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusPubRsp();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusPubRsp* XmsgImHlrChannelStatusPubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusPubRsp* n = new XmsgImHlrChannelStatusPubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusPubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusPubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusPubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusPubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusPubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusPubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusPubRsp)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusPubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusPubRsp)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusPubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusPubRsp)
  return target;
}

size_t XmsgImHlrChannelStatusPubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusPubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusPubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusPubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusPubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusPubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusPubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusPubRsp::MergeFrom(const XmsgImHlrChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrChannelStatusPubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusPubRsp::CopyFrom(const XmsgImHlrChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusPubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusPubRsp::Swap(XmsgImHlrChannelStatusPubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusPubRsp::InternalSwap(XmsgImHlrChannelStatusPubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusPubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrChannelStatusChangedNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrChannelStatusChangedNotice::kCgtFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kPlatFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kDidFieldNumber;
const int XmsgImHlrChannelStatusChangedNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrChannelStatusChangedNotice::XmsgImHlrChannelStatusChangedNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrChannelStatusChangedNotice)
}
XmsgImHlrChannelStatusChangedNotice::XmsgImHlrChannelStatusChangedNotice(const XmsgImHlrChannelStatusChangedNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrChannelStatusChangedNotice)
}

void XmsgImHlrChannelStatusChangedNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrChannelStatusChangedNotice::~XmsgImHlrChannelStatusChangedNotice() {
  // @@protoc_insertion_point(destructor:XmsgImHlrChannelStatusChangedNotice)
  SharedDtor();
}

void XmsgImHlrChannelStatusChangedNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrChannelStatusChangedNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrChannelStatusChangedNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrChannelStatusChangedNotice& XmsgImHlrChannelStatusChangedNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImHlrChannelStatusChangedNotice();
  return *internal_default_instance();
}

XmsgImHlrChannelStatusChangedNotice* XmsgImHlrChannelStatusChangedNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrChannelStatusChangedNotice* n = new XmsgImHlrChannelStatusChangedNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrChannelStatusChangedNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrChannelStatusChangedNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrChannelStatusChangedNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrChannelStatusChangedNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrChannelStatusChangedNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrChannelStatusChangedNotice)
  return false;
#undef DO_
}

void XmsgImHlrChannelStatusChangedNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plat(), output);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->did(), output);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrChannelStatusChangedNotice)
}

::google::protobuf::uint8* XmsgImHlrChannelStatusChangedNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plat(), target);
  }

  // string did = 3;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrChannelStatusChangedNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrChannelStatusChangedNotice)
  return target;
}

size_t XmsgImHlrChannelStatusChangedNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrChannelStatusChangedNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 2;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 3;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrChannelStatusChangedNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrChannelStatusChangedNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrChannelStatusChangedNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrChannelStatusChangedNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrChannelStatusChangedNotice)
    MergeFrom(*source);
  }
}

void XmsgImHlrChannelStatusChangedNotice::MergeFrom(const XmsgImHlrChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgImHlrChannelStatusChangedNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrChannelStatusChangedNotice::CopyFrom(const XmsgImHlrChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrChannelStatusChangedNotice::IsInitialized() const {
  return true;
}

void XmsgImHlrChannelStatusChangedNotice::Swap(XmsgImHlrChannelStatusChangedNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrChannelStatusChangedNotice::InternalSwap(XmsgImHlrChannelStatusChangedNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrChannelStatusChangedNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientKickReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientKickReq::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientKickReq::XmsgApClientKickReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientKickReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientKickReq)
}
XmsgApClientKickReq::XmsgApClientKickReq(const XmsgApClientKickReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientKickReq)
}

void XmsgApClientKickReq::SharedCtor() {
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientKickReq::~XmsgApClientKickReq() {
  // @@protoc_insertion_point(destructor:XmsgApClientKickReq)
  SharedDtor();
}

void XmsgApClientKickReq::SharedDtor() {
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientKickReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientKickReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientKickReq& XmsgApClientKickReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientKickReq();
  return *internal_default_instance();
}

XmsgApClientKickReq* XmsgApClientKickReq::New(::google::protobuf::Arena* arena) const {
  XmsgApClientKickReq* n = new XmsgApClientKickReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientKickReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientKickReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientKickReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickReq.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientKickReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientKickReq)
  return false;
#undef DO_
}

void XmsgApClientKickReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ccid = 1;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientKickReq.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientKickReq)
}

::google::protobuf::uint8* XmsgApClientKickReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ccid = 1;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientKickReq.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientKickReq)
  return target;
}

size_t XmsgApClientKickReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientKickReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ccid = 1;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientKickReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientKickReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientKickReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientKickReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientKickReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientKickReq)
    MergeFrom(*source);
  }
}

void XmsgApClientKickReq::MergeFrom(const XmsgApClientKickReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientKickReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientKickReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientKickReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientKickReq::CopyFrom(const XmsgApClientKickReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientKickReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientKickReq::IsInitialized() const {
  return true;
}

void XmsgApClientKickReq::Swap(XmsgApClientKickReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientKickReq::InternalSwap(XmsgApClientKickReq* other) {
  using std::swap;
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientKickReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgApClientKickRsp_ExtEntry_DoNotUse::XmsgApClientKickRsp_ExtEntry_DoNotUse() {}
XmsgApClientKickRsp_ExtEntry_DoNotUse::XmsgApClientKickRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgApClientKickRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgApClientKickRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgApClientKickRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[26];
}
void XmsgApClientKickRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgApClientKickRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientKickRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientKickRsp::XmsgApClientKickRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientKickRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientKickRsp)
}
XmsgApClientKickRsp::XmsgApClientKickRsp(const XmsgApClientKickRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgApClientKickRsp)
}

void XmsgApClientKickRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgApClientKickRsp::~XmsgApClientKickRsp() {
  // @@protoc_insertion_point(destructor:XmsgApClientKickRsp)
  SharedDtor();
}

void XmsgApClientKickRsp::SharedDtor() {
}

void XmsgApClientKickRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientKickRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientKickRsp& XmsgApClientKickRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientKickRsp();
  return *internal_default_instance();
}

XmsgApClientKickRsp* XmsgApClientKickRsp::New(::google::protobuf::Arena* arena) const {
  XmsgApClientKickRsp* n = new XmsgApClientKickRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientKickRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgApClientKickRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientKickRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgApClientKickRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgApClientKickRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientKickRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientKickRsp)
  return false;
#undef DO_
}

void XmsgApClientKickRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientKickRsp)
}

::google::protobuf::uint8* XmsgApClientKickRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientKickRsp)
  return target;
}

size_t XmsgApClientKickRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientKickRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientKickRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientKickRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientKickRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientKickRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientKickRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientKickRsp)
    MergeFrom(*source);
  }
}

void XmsgApClientKickRsp::MergeFrom(const XmsgApClientKickRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientKickRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgApClientKickRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientKickRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientKickRsp::CopyFrom(const XmsgApClientKickRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientKickRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientKickRsp::IsInitialized() const {
  return true;
}

void XmsgApClientKickRsp::Swap(XmsgApClientKickRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientKickRsp::InternalSwap(XmsgApClientKickRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientKickRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientLostNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientLostNotice::kApCgtFieldNumber;
const int XmsgApClientLostNotice::kCgtFieldNumber;
const int XmsgApClientLostNotice::kPlatFieldNumber;
const int XmsgApClientLostNotice::kDidFieldNumber;
const int XmsgApClientLostNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientLostNotice::XmsgApClientLostNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientLostNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientLostNotice)
}
XmsgApClientLostNotice::XmsgApClientLostNotice(const XmsgApClientLostNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientLostNotice)
}

void XmsgApClientLostNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientLostNotice::~XmsgApClientLostNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientLostNotice)
  SharedDtor();
}

void XmsgApClientLostNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientLostNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientLostNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientLostNotice& XmsgApClientLostNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientLostNotice();
  return *internal_default_instance();
}

XmsgApClientLostNotice* XmsgApClientLostNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientLostNotice* n = new XmsgApClientLostNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientLostNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientLostNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientLostNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientLostNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientLostNotice)
  return false;
#undef DO_
}

void XmsgApClientLostNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientLostNotice)
}

::google::protobuf::uint8* XmsgApClientLostNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientLostNotice)
  return target;
}

size_t XmsgApClientLostNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientLostNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientLostNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientLostNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientLostNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientLostNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientLostNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientLostNotice::MergeFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientLostNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientLostNotice::CopyFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientLostNotice::IsInitialized() const {
  return true;
}

void XmsgApClientLostNotice::Swap(XmsgApClientLostNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientLostNotice::InternalSwap(XmsgApClientLostNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientLostNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientEstbNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientEstbNotice::kApCgtFieldNumber;
const int XmsgApClientEstbNotice::kCgtFieldNumber;
const int XmsgApClientEstbNotice::kPlatFieldNumber;
const int XmsgApClientEstbNotice::kDidFieldNumber;
const int XmsgApClientEstbNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientEstbNotice::XmsgApClientEstbNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientEstbNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientEstbNotice)
}
XmsgApClientEstbNotice::XmsgApClientEstbNotice(const XmsgApClientEstbNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientEstbNotice)
}

void XmsgApClientEstbNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientEstbNotice::~XmsgApClientEstbNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientEstbNotice)
  SharedDtor();
}

void XmsgApClientEstbNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientEstbNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientEstbNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientEstbNotice& XmsgApClientEstbNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgApClientEstbNotice();
  return *internal_default_instance();
}

XmsgApClientEstbNotice* XmsgApClientEstbNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientEstbNotice* n = new XmsgApClientEstbNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientEstbNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientEstbNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientEstbNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientEstbNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientEstbNotice)
  return false;
#undef DO_
}

void XmsgApClientEstbNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientEstbNotice)
}

::google::protobuf::uint8* XmsgApClientEstbNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientEstbNotice)
  return target;
}

size_t XmsgApClientEstbNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientEstbNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientEstbNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientEstbNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientEstbNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientEstbNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientEstbNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientEstbNotice::MergeFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientEstbNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientEstbNotice::CopyFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientEstbNotice::IsInitialized() const {
  return true;
}

void XmsgApClientEstbNotice::Swap(XmsgApClientEstbNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientEstbNotice::InternalSwap(XmsgApClientEstbNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientEstbNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse() {}
XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[30];
}
void XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgUpdateAccountInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgUpdateAccountInfoReq::kCgtFieldNumber;
const int XmsgImAuthOrgUpdateAccountInfoReq::kUpsertFieldNumber;
const int XmsgImAuthOrgUpdateAccountInfoReq::kRemoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgUpdateAccountInfoReq::XmsgImAuthOrgUpdateAccountInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgUpdateAccountInfoReq)
}
XmsgImAuthOrgUpdateAccountInfoReq::XmsgImAuthOrgUpdateAccountInfoReq(const XmsgImAuthOrgUpdateAccountInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remove_(from.remove_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsert_.MergeFrom(from.upsert_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgUpdateAccountInfoReq)
}

void XmsgImAuthOrgUpdateAccountInfoReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthOrgUpdateAccountInfoReq::~XmsgImAuthOrgUpdateAccountInfoReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgUpdateAccountInfoReq)
  SharedDtor();
}

void XmsgImAuthOrgUpdateAccountInfoReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthOrgUpdateAccountInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgUpdateAccountInfoReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgUpdateAccountInfoReq& XmsgImAuthOrgUpdateAccountInfoReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
  return *internal_default_instance();
}

XmsgImAuthOrgUpdateAccountInfoReq* XmsgImAuthOrgUpdateAccountInfoReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgUpdateAccountInfoReq* n = new XmsgImAuthOrgUpdateAccountInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgUpdateAccountInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  upsert_.Clear();
  remove_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgUpdateAccountInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgUpdateAccountInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> upsert = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&upsert_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string remove = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_remove()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remove(this->remove_size() - 1).data(),
            static_cast<int>(this->remove(this->remove_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.remove"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgUpdateAccountInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgUpdateAccountInfoReq)
  return false;
#undef DO_
}

void XmsgImAuthOrgUpdateAccountInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.remove");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->remove(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgUpdateAccountInfoReq)
}

::google::protobuf::uint8* XmsgImAuthOrgUpdateAccountInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value");
      }
    };

    if (deterministic &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.remove");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->remove(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgUpdateAccountInfoReq)
  return target;
}

size_t XmsgImAuthOrgUpdateAccountInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgUpdateAccountInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> upsert = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->upsert_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->upsert().begin();
        it != this->upsert().end(); ++it) {
      entry.reset(upsert_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string remove = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->remove_size());
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->remove(i));
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgUpdateAccountInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgUpdateAccountInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgUpdateAccountInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgUpdateAccountInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgUpdateAccountInfoReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgUpdateAccountInfoReq::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  upsert_.MergeFrom(from.upsert_);
  remove_.MergeFrom(from.remove_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthOrgUpdateAccountInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgUpdateAccountInfoReq::CopyFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgUpdateAccountInfoReq::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgUpdateAccountInfoReq::Swap(XmsgImAuthOrgUpdateAccountInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgUpdateAccountInfoReq::InternalSwap(XmsgImAuthOrgUpdateAccountInfoReq* other) {
  using std::swap;
  upsert_.Swap(&other->upsert_);
  remove_.InternalSwap(&other->remove_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse() {}
XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[32];
}
void XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgUpdateAccountInfoRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgUpdateAccountInfoRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgUpdateAccountInfoRsp::XmsgImAuthOrgUpdateAccountInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgUpdateAccountInfoRsp)
}
XmsgImAuthOrgUpdateAccountInfoRsp::XmsgImAuthOrgUpdateAccountInfoRsp(const XmsgImAuthOrgUpdateAccountInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgUpdateAccountInfoRsp)
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImAuthOrgUpdateAccountInfoRsp::~XmsgImAuthOrgUpdateAccountInfoRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgUpdateAccountInfoRsp)
  SharedDtor();
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SharedDtor() {
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgUpdateAccountInfoRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgUpdateAccountInfoRsp& XmsgImAuthOrgUpdateAccountInfoRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
  return *internal_default_instance();
}

XmsgImAuthOrgUpdateAccountInfoRsp* XmsgImAuthOrgUpdateAccountInfoRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgUpdateAccountInfoRsp* n = new XmsgImAuthOrgUpdateAccountInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgUpdateAccountInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgUpdateAccountInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgUpdateAccountInfoRsp)
  return false;
#undef DO_
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgUpdateAccountInfoRsp)
}

::google::protobuf::uint8* XmsgImAuthOrgUpdateAccountInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgUpdateAccountInfoRsp)
  return target;
}

size_t XmsgImAuthOrgUpdateAccountInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgUpdateAccountInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgUpdateAccountInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgUpdateAccountInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgUpdateAccountInfoRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgUpdateAccountInfoRsp::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImAuthOrgUpdateAccountInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgUpdateAccountInfoRsp::CopyFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgUpdateAccountInfoRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::Swap(XmsgImAuthOrgUpdateAccountInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgUpdateAccountInfoRsp::InternalSwap(XmsgImAuthOrgUpdateAccountInfoRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse() {}
XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[34];
}
void XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImMgrHlrSendSysNoticeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrHlrSendSysNoticeReq::kMsgFieldNumber;
const int XmsgImMgrHlrSendSysNoticeReq::kDatFieldNumber;
const int XmsgImMgrHlrSendSysNoticeReq::kExpiredFieldNumber;
const int XmsgImMgrHlrSendSysNoticeReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrHlrSendSysNoticeReq::XmsgImMgrHlrSendSysNoticeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrHlrSendSysNoticeReq)
}
XmsgImMgrHlrSendSysNoticeReq::XmsgImMgrHlrSendSysNoticeReq(const XmsgImMgrHlrSendSysNoticeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dat().size() > 0) {
    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  expired_ = from.expired_;
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrHlrSendSysNoticeReq)
}

void XmsgImMgrHlrSendSysNoticeReq::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expired_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImMgrHlrSendSysNoticeReq::~XmsgImMgrHlrSendSysNoticeReq() {
  // @@protoc_insertion_point(destructor:XmsgImMgrHlrSendSysNoticeReq)
  SharedDtor();
}

void XmsgImMgrHlrSendSysNoticeReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMgrHlrSendSysNoticeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrHlrSendSysNoticeReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrHlrSendSysNoticeReq& XmsgImMgrHlrSendSysNoticeReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeReq();
  return *internal_default_instance();
}

XmsgImMgrHlrSendSysNoticeReq* XmsgImMgrHlrSendSysNoticeReq::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrHlrSendSysNoticeReq* n = new XmsgImMgrHlrSendSysNoticeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrHlrSendSysNoticeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrHlrSendSysNoticeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expired_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImMgrHlrSendSysNoticeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrHlrSendSysNoticeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrHlrSendSysNoticeReq.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrHlrSendSysNoticeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrHlrSendSysNoticeReq)
  return false;
#undef DO_
}

void XmsgImMgrHlrSendSysNoticeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrHlrSendSysNoticeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMgrHlrSendSysNoticeReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->dat(), output);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expired(), output);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrHlrSendSysNoticeReq)
}

::google::protobuf::uint8* XmsgImMgrHlrSendSysNoticeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrHlrSendSysNoticeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMgrHlrSendSysNoticeReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->dat(), target);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expired(), target);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrHlrSendSysNoticeReq)
  return target;
}

size_t XmsgImMgrHlrSendSysNoticeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrHlrSendSysNoticeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dat());
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrHlrSendSysNoticeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrHlrSendSysNoticeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrHlrSendSysNoticeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrHlrSendSysNoticeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrHlrSendSysNoticeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrHlrSendSysNoticeReq)
    MergeFrom(*source);
  }
}

void XmsgImMgrHlrSendSysNoticeReq::MergeFrom(const XmsgImMgrHlrSendSysNoticeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrHlrSendSysNoticeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.dat().size() > 0) {

    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImMgrHlrSendSysNoticeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrHlrSendSysNoticeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrHlrSendSysNoticeReq::CopyFrom(const XmsgImMgrHlrSendSysNoticeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrHlrSendSysNoticeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrHlrSendSysNoticeReq::IsInitialized() const {
  return true;
}

void XmsgImMgrHlrSendSysNoticeReq::Swap(XmsgImMgrHlrSendSysNoticeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrHlrSendSysNoticeReq::InternalSwap(XmsgImMgrHlrSendSysNoticeReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  msg_.Swap(&other->msg_);
  dat_.Swap(&other->dat_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrHlrSendSysNoticeReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse() {}
XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[36];
}
void XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImMgrHlrSendSysNoticeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrHlrSendSysNoticeRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrHlrSendSysNoticeRsp::XmsgImMgrHlrSendSysNoticeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrHlrSendSysNoticeRsp)
}
XmsgImMgrHlrSendSysNoticeRsp::XmsgImMgrHlrSendSysNoticeRsp(const XmsgImMgrHlrSendSysNoticeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrHlrSendSysNoticeRsp)
}

void XmsgImMgrHlrSendSysNoticeRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMgrHlrSendSysNoticeRsp::~XmsgImMgrHlrSendSysNoticeRsp() {
  // @@protoc_insertion_point(destructor:XmsgImMgrHlrSendSysNoticeRsp)
  SharedDtor();
}

void XmsgImMgrHlrSendSysNoticeRsp::SharedDtor() {
}

void XmsgImMgrHlrSendSysNoticeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrHlrSendSysNoticeRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrHlrSendSysNoticeRsp& XmsgImMgrHlrSendSysNoticeRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::InitDefaultsXmsgImMgrHlrSendSysNoticeRsp();
  return *internal_default_instance();
}

XmsgImMgrHlrSendSysNoticeRsp* XmsgImMgrHlrSendSysNoticeRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrHlrSendSysNoticeRsp* n = new XmsgImMgrHlrSendSysNoticeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrHlrSendSysNoticeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrHlrSendSysNoticeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMgrHlrSendSysNoticeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrHlrSendSysNoticeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrHlrSendSysNoticeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrHlrSendSysNoticeRsp)
  return false;
#undef DO_
}

void XmsgImMgrHlrSendSysNoticeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrHlrSendSysNoticeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrHlrSendSysNoticeRsp)
}

::google::protobuf::uint8* XmsgImMgrHlrSendSysNoticeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrHlrSendSysNoticeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrHlrSendSysNoticeRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrHlrSendSysNoticeRsp)
  return target;
}

size_t XmsgImMgrHlrSendSysNoticeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrHlrSendSysNoticeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImMgrHlrSendSysNoticeRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrHlrSendSysNoticeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrHlrSendSysNoticeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrHlrSendSysNoticeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrHlrSendSysNoticeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrHlrSendSysNoticeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrHlrSendSysNoticeRsp)
    MergeFrom(*source);
  }
}

void XmsgImMgrHlrSendSysNoticeRsp::MergeFrom(const XmsgImMgrHlrSendSysNoticeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrHlrSendSysNoticeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImMgrHlrSendSysNoticeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrHlrSendSysNoticeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrHlrSendSysNoticeRsp::CopyFrom(const XmsgImMgrHlrSendSysNoticeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrHlrSendSysNoticeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrHlrSendSysNoticeRsp::IsInitialized() const {
  return true;
}

void XmsgImMgrHlrSendSysNoticeRsp::Swap(XmsgImMgrHlrSendSysNoticeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrHlrSendSysNoticeRsp::InternalSwap(XmsgImMgrHlrSendSysNoticeRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrHlrSendSysNoticeRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dhlr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
