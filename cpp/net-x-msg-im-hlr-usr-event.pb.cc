// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-hlr-usr-event.proto

#include "net-x-msg-im-hlr-usr-event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImHlrEventUsrSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrSubReq>
      _instance;
} _XmsgImHlrEventUsrSubReq_default_instance_;
class XmsgImHlrEventUsrSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrSubRsp>
      _instance;
} _XmsgImHlrEventUsrSubRsp_default_instance_;
class XmsgImHlrEventSysSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysSubReq>
      _instance;
} _XmsgImHlrEventSysSubReq_default_instance_;
class XmsgImHlrEventSysSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysSubRsp>
      _instance;
} _XmsgImHlrEventSysSubRsp_default_instance_;
class XmsgImHlrEventUsrNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrNotice>
      _instance;
} _XmsgImHlrEventUsrNotice_default_instance_;
class XmsgImHlrEventSysNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysNotice>
      _instance;
} _XmsgImHlrEventSysNotice_default_instance_;
class XmsgImHlrEventUsrReadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrReadReq>
      _instance;
} _XmsgImHlrEventUsrReadReq_default_instance_;
class XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrEventUsrReadRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventUsrReadRsp>
      _instance;
} _XmsgImHlrEventUsrReadRsp_default_instance_;
class XmsgImHlrEventSysReadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysReadReq>
      _instance;
} _XmsgImHlrEventSysReadReq_default_instance_;
class XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrEventSysReadRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrEventSysReadRsp>
      _instance;
} _XmsgImHlrEventSysReadRsp_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto {
void InitDefaultsXmsgImHlrEventUsrSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventUsrSubReq_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventUsrSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrSubReqImpl);
}

void InitDefaultsXmsgImHlrEventUsrSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventUsrSubRsp_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventUsrSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrSubRspImpl);
}

void InitDefaultsXmsgImHlrEventSysSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventSysSubReq_default_instance_;
    new (ptr) ::XmsgImHlrEventSysSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventSysSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysSubReqImpl);
}

void InitDefaultsXmsgImHlrEventSysSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventSysSubRsp_default_instance_;
    new (ptr) ::XmsgImHlrEventSysSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventSysSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysSubRspImpl);
}

void InitDefaultsXmsgImHlrEventUsrNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventUsrNotice_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventUsrNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrNoticeImpl);
}

void InitDefaultsXmsgImHlrEventSysNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventSysNotice_default_instance_;
    new (ptr) ::XmsgImHlrEventSysNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventSysNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysNoticeImpl);
}

void InitDefaultsXmsgImHlrEventUsrReadReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventUsrReadReq_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrReadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventUsrReadReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrReadReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrReadReqImpl);
}

void InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrEventUsrReadRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrEventUsrReadRsp_default_instance_;
    new (ptr) ::XmsgImHlrEventUsrReadRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventUsrReadRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventUsrReadRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventUsrReadRspImpl);
}

void InitDefaultsXmsgImHlrEventSysReadReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventSysReadReq_default_instance_;
    new (ptr) ::XmsgImHlrEventSysReadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventSysReadReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysReadReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysReadReqImpl);
}

void InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrEventSysReadRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrEventSysReadRsp_default_instance_;
    new (ptr) ::XmsgImHlrEventSysReadRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrEventSysReadRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrEventSysReadRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrEventSysReadRspImpl);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrSubReq, ver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrSubRsp, latestver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysSubReq, ver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysSubRsp, latestver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrNotice, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrNotice, dat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrNotice, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrNotice, gts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysNotice, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysNotice, dat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysNotice, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysNotice, gts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadReq, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventUsrReadRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadReq, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrEventSysReadRsp, ext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgImHlrEventUsrSubReq)},
  { 6, -1, sizeof(::XmsgImHlrEventUsrSubRsp)},
  { 12, -1, sizeof(::XmsgImHlrEventSysSubReq)},
  { 18, -1, sizeof(::XmsgImHlrEventSysSubRsp)},
  { 24, -1, sizeof(::XmsgImHlrEventUsrNotice)},
  { 33, -1, sizeof(::XmsgImHlrEventSysNotice)},
  { 42, -1, sizeof(::XmsgImHlrEventUsrReadReq)},
  { 48, 55, sizeof(::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse)},
  { 57, -1, sizeof(::XmsgImHlrEventUsrReadRsp)},
  { 63, -1, sizeof(::XmsgImHlrEventSysReadReq)},
  { 69, 76, sizeof(::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse)},
  { 78, -1, sizeof(::XmsgImHlrEventSysReadRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventUsrReadRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrEventSysReadRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-im-hlr-usr-event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n net-x-msg-im-hlr-usr-event.proto\"&\n\027Xm"
      "sgImHlrEventUsrSubReq\022\013\n\003ver\030\001 \001(\004\",\n\027Xm"
      "sgImHlrEventUsrSubRsp\022\021\n\tlatestVer\030\001 \001(\004"
      "\"&\n\027XmsgImHlrEventSysSubReq\022\013\n\003ver\030\001 \001(\004"
      "\",\n\027XmsgImHlrEventSysSubRsp\022\021\n\tlatestVer"
      "\030\001 \001(\004\"M\n\027XmsgImHlrEventUsrNotice\022\013\n\003msg"
      "\030\001 \001(\t\022\013\n\003dat\030\002 \001(\014\022\013\n\003ver\030\003 \001(\004\022\013\n\003gts\030"
      "\004 \001(\004\"M\n\027XmsgImHlrEventSysNotice\022\013\n\003msg\030"
      "\001 \001(\t\022\013\n\003dat\030\002 \001(\014\022\013\n\003ver\030\003 \001(\004\022\013\n\003gts\030\004"
      " \001(\004\"\'\n\030XmsgImHlrEventUsrReadReq\022\013\n\003ver\030"
      "\001 \001(\004\"w\n\030XmsgImHlrEventUsrReadRsp\022/\n\003ext"
      "\030\001 \003(\0132\".XmsgImHlrEventUsrReadRsp.ExtEnt"
      "ry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"\'\n\030XmsgImHlrEventSysReadReq\022\013\n\003ve"
      "r\030\001 \001(\004\"w\n\030XmsgImHlrEventSysReadRsp\022/\n\003e"
      "xt\030\001 \003(\0132\".XmsgImHlrEventSysReadRsp.ExtE"
      "ntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t:\0028\001B\037\n\010x.msg.pbB\023XmsgImHlrUsrEventP"
      "bb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 729);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-im-hlr-usr-event.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto

// ===================================================================

void XmsgImHlrEventUsrSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventUsrSubReq::kVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventUsrSubReq::XmsgImHlrEventUsrSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventUsrSubReq)
}
XmsgImHlrEventUsrSubReq::XmsgImHlrEventUsrSubReq(const XmsgImHlrEventUsrSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ver_ = from.ver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventUsrSubReq)
}

void XmsgImHlrEventUsrSubReq::SharedCtor() {
  ver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventUsrSubReq::~XmsgImHlrEventUsrSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventUsrSubReq)
  SharedDtor();
}

void XmsgImHlrEventUsrSubReq::SharedDtor() {
}

void XmsgImHlrEventUsrSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventUsrSubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventUsrSubReq& XmsgImHlrEventUsrSubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubReq();
  return *internal_default_instance();
}

XmsgImHlrEventUsrSubReq* XmsgImHlrEventUsrSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventUsrSubReq* n = new XmsgImHlrEventUsrSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventUsrSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventUsrSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventUsrSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventUsrSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventUsrSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventUsrSubReq)
  return false;
#undef DO_
}

void XmsgImHlrEventUsrSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventUsrSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventUsrSubReq)
}

::google::protobuf::uint8* XmsgImHlrEventUsrSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventUsrSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventUsrSubReq)
  return target;
}

size_t XmsgImHlrEventUsrSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventUsrSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver = 1;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventUsrSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventUsrSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventUsrSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventUsrSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventUsrSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventUsrSubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventUsrSubReq::MergeFrom(const XmsgImHlrEventUsrSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventUsrSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImHlrEventUsrSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventUsrSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventUsrSubReq::CopyFrom(const XmsgImHlrEventUsrSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventUsrSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventUsrSubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrEventUsrSubReq::Swap(XmsgImHlrEventUsrSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventUsrSubReq::InternalSwap(XmsgImHlrEventUsrSubReq* other) {
  using std::swap;
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventUsrSubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventUsrSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventUsrSubRsp::kLatestVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventUsrSubRsp::XmsgImHlrEventUsrSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventUsrSubRsp)
}
XmsgImHlrEventUsrSubRsp::XmsgImHlrEventUsrSubRsp(const XmsgImHlrEventUsrSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latestver_ = from.latestver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventUsrSubRsp)
}

void XmsgImHlrEventUsrSubRsp::SharedCtor() {
  latestver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventUsrSubRsp::~XmsgImHlrEventUsrSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventUsrSubRsp)
  SharedDtor();
}

void XmsgImHlrEventUsrSubRsp::SharedDtor() {
}

void XmsgImHlrEventUsrSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventUsrSubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventUsrSubRsp& XmsgImHlrEventUsrSubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubRsp();
  return *internal_default_instance();
}

XmsgImHlrEventUsrSubRsp* XmsgImHlrEventUsrSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventUsrSubRsp* n = new XmsgImHlrEventUsrSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventUsrSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventUsrSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latestver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventUsrSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventUsrSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 latestVer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &latestver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventUsrSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventUsrSubRsp)
  return false;
#undef DO_
}

void XmsgImHlrEventUsrSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventUsrSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->latestver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventUsrSubRsp)
}

::google::protobuf::uint8* XmsgImHlrEventUsrSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventUsrSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->latestver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventUsrSubRsp)
  return target;
}

size_t XmsgImHlrEventUsrSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventUsrSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->latestver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventUsrSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventUsrSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventUsrSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventUsrSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventUsrSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventUsrSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventUsrSubRsp::MergeFrom(const XmsgImHlrEventUsrSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventUsrSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latestver() != 0) {
    set_latestver(from.latestver());
  }
}

void XmsgImHlrEventUsrSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventUsrSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventUsrSubRsp::CopyFrom(const XmsgImHlrEventUsrSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventUsrSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventUsrSubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrEventUsrSubRsp::Swap(XmsgImHlrEventUsrSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventUsrSubRsp::InternalSwap(XmsgImHlrEventUsrSubRsp* other) {
  using std::swap;
  swap(latestver_, other->latestver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventUsrSubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventSysSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventSysSubReq::kVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventSysSubReq::XmsgImHlrEventSysSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventSysSubReq)
}
XmsgImHlrEventSysSubReq::XmsgImHlrEventSysSubReq(const XmsgImHlrEventSysSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ver_ = from.ver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventSysSubReq)
}

void XmsgImHlrEventSysSubReq::SharedCtor() {
  ver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventSysSubReq::~XmsgImHlrEventSysSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventSysSubReq)
  SharedDtor();
}

void XmsgImHlrEventSysSubReq::SharedDtor() {
}

void XmsgImHlrEventSysSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventSysSubReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventSysSubReq& XmsgImHlrEventSysSubReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubReq();
  return *internal_default_instance();
}

XmsgImHlrEventSysSubReq* XmsgImHlrEventSysSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventSysSubReq* n = new XmsgImHlrEventSysSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventSysSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventSysSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventSysSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventSysSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventSysSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventSysSubReq)
  return false;
#undef DO_
}

void XmsgImHlrEventSysSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventSysSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventSysSubReq)
}

::google::protobuf::uint8* XmsgImHlrEventSysSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventSysSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventSysSubReq)
  return target;
}

size_t XmsgImHlrEventSysSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventSysSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver = 1;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventSysSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventSysSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventSysSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventSysSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventSysSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventSysSubReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventSysSubReq::MergeFrom(const XmsgImHlrEventSysSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventSysSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImHlrEventSysSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventSysSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventSysSubReq::CopyFrom(const XmsgImHlrEventSysSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventSysSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventSysSubReq::IsInitialized() const {
  return true;
}

void XmsgImHlrEventSysSubReq::Swap(XmsgImHlrEventSysSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventSysSubReq::InternalSwap(XmsgImHlrEventSysSubReq* other) {
  using std::swap;
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventSysSubReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventSysSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventSysSubRsp::kLatestVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventSysSubRsp::XmsgImHlrEventSysSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventSysSubRsp)
}
XmsgImHlrEventSysSubRsp::XmsgImHlrEventSysSubRsp(const XmsgImHlrEventSysSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latestver_ = from.latestver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventSysSubRsp)
}

void XmsgImHlrEventSysSubRsp::SharedCtor() {
  latestver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventSysSubRsp::~XmsgImHlrEventSysSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventSysSubRsp)
  SharedDtor();
}

void XmsgImHlrEventSysSubRsp::SharedDtor() {
}

void XmsgImHlrEventSysSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventSysSubRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventSysSubRsp& XmsgImHlrEventSysSubRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubRsp();
  return *internal_default_instance();
}

XmsgImHlrEventSysSubRsp* XmsgImHlrEventSysSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventSysSubRsp* n = new XmsgImHlrEventSysSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventSysSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventSysSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latestver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventSysSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventSysSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 latestVer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &latestver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventSysSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventSysSubRsp)
  return false;
#undef DO_
}

void XmsgImHlrEventSysSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventSysSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->latestver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventSysSubRsp)
}

::google::protobuf::uint8* XmsgImHlrEventSysSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventSysSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->latestver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventSysSubRsp)
  return target;
}

size_t XmsgImHlrEventSysSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventSysSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 latestVer = 1;
  if (this->latestver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->latestver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventSysSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventSysSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventSysSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventSysSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventSysSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventSysSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventSysSubRsp::MergeFrom(const XmsgImHlrEventSysSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventSysSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latestver() != 0) {
    set_latestver(from.latestver());
  }
}

void XmsgImHlrEventSysSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventSysSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventSysSubRsp::CopyFrom(const XmsgImHlrEventSysSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventSysSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventSysSubRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrEventSysSubRsp::Swap(XmsgImHlrEventSysSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventSysSubRsp::InternalSwap(XmsgImHlrEventSysSubRsp* other) {
  using std::swap;
  swap(latestver_, other->latestver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventSysSubRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventUsrNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventUsrNotice::kMsgFieldNumber;
const int XmsgImHlrEventUsrNotice::kDatFieldNumber;
const int XmsgImHlrEventUsrNotice::kVerFieldNumber;
const int XmsgImHlrEventUsrNotice::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventUsrNotice::XmsgImHlrEventUsrNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventUsrNotice)
}
XmsgImHlrEventUsrNotice::XmsgImHlrEventUsrNotice(const XmsgImHlrEventUsrNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dat().size() > 0) {
    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventUsrNotice)
}

void XmsgImHlrEventUsrNotice::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgImHlrEventUsrNotice::~XmsgImHlrEventUsrNotice() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventUsrNotice)
  SharedDtor();
}

void XmsgImHlrEventUsrNotice::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrEventUsrNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventUsrNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventUsrNotice& XmsgImHlrEventUsrNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrNotice();
  return *internal_default_instance();
}

XmsgImHlrEventUsrNotice* XmsgImHlrEventUsrNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventUsrNotice* n = new XmsgImHlrEventUsrNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventUsrNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventUsrNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventUsrNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventUsrNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventUsrNotice.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventUsrNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventUsrNotice)
  return false;
#undef DO_
}

void XmsgImHlrEventUsrNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventUsrNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrEventUsrNotice.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->dat(), output);
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ver(), output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventUsrNotice)
}

::google::protobuf::uint8* XmsgImHlrEventUsrNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventUsrNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrEventUsrNotice.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->dat(), target);
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ver(), target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventUsrNotice)
  return target;
}

size_t XmsgImHlrEventUsrNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventUsrNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dat());
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventUsrNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventUsrNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventUsrNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventUsrNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventUsrNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventUsrNotice)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventUsrNotice::MergeFrom(const XmsgImHlrEventUsrNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventUsrNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.dat().size() > 0) {

    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImHlrEventUsrNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventUsrNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventUsrNotice::CopyFrom(const XmsgImHlrEventUsrNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventUsrNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventUsrNotice::IsInitialized() const {
  return true;
}

void XmsgImHlrEventUsrNotice::Swap(XmsgImHlrEventUsrNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventUsrNotice::InternalSwap(XmsgImHlrEventUsrNotice* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  dat_.Swap(&other->dat_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventUsrNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventSysNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventSysNotice::kMsgFieldNumber;
const int XmsgImHlrEventSysNotice::kDatFieldNumber;
const int XmsgImHlrEventSysNotice::kVerFieldNumber;
const int XmsgImHlrEventSysNotice::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventSysNotice::XmsgImHlrEventSysNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventSysNotice)
}
XmsgImHlrEventSysNotice::XmsgImHlrEventSysNotice(const XmsgImHlrEventSysNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dat().size() > 0) {
    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventSysNotice)
}

void XmsgImHlrEventSysNotice::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgImHlrEventSysNotice::~XmsgImHlrEventSysNotice() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventSysNotice)
  SharedDtor();
}

void XmsgImHlrEventSysNotice::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrEventSysNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventSysNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventSysNotice& XmsgImHlrEventSysNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysNotice();
  return *internal_default_instance();
}

XmsgImHlrEventSysNotice* XmsgImHlrEventSysNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventSysNotice* n = new XmsgImHlrEventSysNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventSysNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventSysNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventSysNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventSysNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventSysNotice.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventSysNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventSysNotice)
  return false;
#undef DO_
}

void XmsgImHlrEventSysNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventSysNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrEventSysNotice.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->dat(), output);
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ver(), output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventSysNotice)
}

::google::protobuf::uint8* XmsgImHlrEventSysNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventSysNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrEventSysNotice.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->dat(), target);
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ver(), target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventSysNotice)
  return target;
}

size_t XmsgImHlrEventSysNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventSysNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes dat = 2;
  if (this->dat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dat());
  }

  // uint64 ver = 3;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventSysNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventSysNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventSysNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventSysNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventSysNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventSysNotice)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventSysNotice::MergeFrom(const XmsgImHlrEventSysNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventSysNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.dat().size() > 0) {

    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImHlrEventSysNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventSysNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventSysNotice::CopyFrom(const XmsgImHlrEventSysNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventSysNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventSysNotice::IsInitialized() const {
  return true;
}

void XmsgImHlrEventSysNotice::Swap(XmsgImHlrEventSysNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventSysNotice::InternalSwap(XmsgImHlrEventSysNotice* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  dat_.Swap(&other->dat_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventSysNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventUsrReadReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventUsrReadReq::kVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventUsrReadReq::XmsgImHlrEventUsrReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventUsrReadReq)
}
XmsgImHlrEventUsrReadReq::XmsgImHlrEventUsrReadReq(const XmsgImHlrEventUsrReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ver_ = from.ver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventUsrReadReq)
}

void XmsgImHlrEventUsrReadReq::SharedCtor() {
  ver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventUsrReadReq::~XmsgImHlrEventUsrReadReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventUsrReadReq)
  SharedDtor();
}

void XmsgImHlrEventUsrReadReq::SharedDtor() {
}

void XmsgImHlrEventUsrReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventUsrReadReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventUsrReadReq& XmsgImHlrEventUsrReadReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadReq();
  return *internal_default_instance();
}

XmsgImHlrEventUsrReadReq* XmsgImHlrEventUsrReadReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventUsrReadReq* n = new XmsgImHlrEventUsrReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventUsrReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventUsrReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventUsrReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventUsrReadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventUsrReadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventUsrReadReq)
  return false;
#undef DO_
}

void XmsgImHlrEventUsrReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventUsrReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventUsrReadReq)
}

::google::protobuf::uint8* XmsgImHlrEventUsrReadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventUsrReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventUsrReadReq)
  return target;
}

size_t XmsgImHlrEventUsrReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventUsrReadReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver = 1;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventUsrReadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventUsrReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventUsrReadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventUsrReadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventUsrReadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventUsrReadReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventUsrReadReq::MergeFrom(const XmsgImHlrEventUsrReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventUsrReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImHlrEventUsrReadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventUsrReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventUsrReadReq::CopyFrom(const XmsgImHlrEventUsrReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventUsrReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventUsrReadReq::IsInitialized() const {
  return true;
}

void XmsgImHlrEventUsrReadReq::Swap(XmsgImHlrEventUsrReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventUsrReadReq::InternalSwap(XmsgImHlrEventUsrReadReq* other) {
  using std::swap;
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventUsrReadReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse() {}
XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[7];
}
void XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrEventUsrReadRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventUsrReadRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventUsrReadRsp::XmsgImHlrEventUsrReadRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventUsrReadRsp)
}
XmsgImHlrEventUsrReadRsp::XmsgImHlrEventUsrReadRsp(const XmsgImHlrEventUsrReadRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventUsrReadRsp)
}

void XmsgImHlrEventUsrReadRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrEventUsrReadRsp::~XmsgImHlrEventUsrReadRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventUsrReadRsp)
  SharedDtor();
}

void XmsgImHlrEventUsrReadRsp::SharedDtor() {
}

void XmsgImHlrEventUsrReadRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventUsrReadRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventUsrReadRsp& XmsgImHlrEventUsrReadRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadRsp();
  return *internal_default_instance();
}

XmsgImHlrEventUsrReadRsp* XmsgImHlrEventUsrReadRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventUsrReadRsp* n = new XmsgImHlrEventUsrReadRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventUsrReadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventUsrReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventUsrReadRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventUsrReadRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventUsrReadRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventUsrReadRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventUsrReadRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventUsrReadRsp)
  return false;
#undef DO_
}

void XmsgImHlrEventUsrReadRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventUsrReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventUsrReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventUsrReadRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventUsrReadRsp)
}

::google::protobuf::uint8* XmsgImHlrEventUsrReadRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventUsrReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventUsrReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventUsrReadRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventUsrReadRsp)
  return target;
}

size_t XmsgImHlrEventUsrReadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventUsrReadRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventUsrReadRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventUsrReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventUsrReadRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventUsrReadRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventUsrReadRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventUsrReadRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventUsrReadRsp::MergeFrom(const XmsgImHlrEventUsrReadRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventUsrReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrEventUsrReadRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventUsrReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventUsrReadRsp::CopyFrom(const XmsgImHlrEventUsrReadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventUsrReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventUsrReadRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrEventUsrReadRsp::Swap(XmsgImHlrEventUsrReadRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventUsrReadRsp::InternalSwap(XmsgImHlrEventUsrReadRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventUsrReadRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrEventSysReadReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventSysReadReq::kVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventSysReadReq::XmsgImHlrEventSysReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventSysReadReq)
}
XmsgImHlrEventSysReadReq::XmsgImHlrEventSysReadReq(const XmsgImHlrEventSysReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ver_ = from.ver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventSysReadReq)
}

void XmsgImHlrEventSysReadReq::SharedCtor() {
  ver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImHlrEventSysReadReq::~XmsgImHlrEventSysReadReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventSysReadReq)
  SharedDtor();
}

void XmsgImHlrEventSysReadReq::SharedDtor() {
}

void XmsgImHlrEventSysReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventSysReadReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventSysReadReq& XmsgImHlrEventSysReadReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadReq();
  return *internal_default_instance();
}

XmsgImHlrEventSysReadReq* XmsgImHlrEventSysReadReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventSysReadReq* n = new XmsgImHlrEventSysReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventSysReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventSysReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventSysReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventSysReadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventSysReadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventSysReadReq)
  return false;
#undef DO_
}

void XmsgImHlrEventSysReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventSysReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventSysReadReq)
}

::google::protobuf::uint8* XmsgImHlrEventSysReadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventSysReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver = 1;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventSysReadReq)
  return target;
}

size_t XmsgImHlrEventSysReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventSysReadReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ver = 1;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventSysReadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventSysReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventSysReadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventSysReadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventSysReadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventSysReadReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventSysReadReq::MergeFrom(const XmsgImHlrEventSysReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventSysReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImHlrEventSysReadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventSysReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventSysReadReq::CopyFrom(const XmsgImHlrEventSysReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventSysReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventSysReadReq::IsInitialized() const {
  return true;
}

void XmsgImHlrEventSysReadReq::Swap(XmsgImHlrEventSysReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventSysReadReq::InternalSwap(XmsgImHlrEventSysReadReq* other) {
  using std::swap;
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventSysReadReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse() {}
XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[10];
}
void XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrEventSysReadRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrEventSysReadRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrEventSysReadRsp::XmsgImHlrEventSysReadRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrEventSysReadRsp)
}
XmsgImHlrEventSysReadRsp::XmsgImHlrEventSysReadRsp(const XmsgImHlrEventSysReadRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrEventSysReadRsp)
}

void XmsgImHlrEventSysReadRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrEventSysReadRsp::~XmsgImHlrEventSysReadRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrEventSysReadRsp)
  SharedDtor();
}

void XmsgImHlrEventSysReadRsp::SharedDtor() {
}

void XmsgImHlrEventSysReadRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrEventSysReadRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrEventSysReadRsp& XmsgImHlrEventSysReadRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadRsp();
  return *internal_default_instance();
}

XmsgImHlrEventSysReadRsp* XmsgImHlrEventSysReadRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrEventSysReadRsp* n = new XmsgImHlrEventSysReadRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrEventSysReadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrEventSysReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrEventSysReadRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrEventSysReadRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventSysReadRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrEventSysReadRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrEventSysReadRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrEventSysReadRsp)
  return false;
#undef DO_
}

void XmsgImHlrEventSysReadRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrEventSysReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventSysReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventSysReadRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrEventSysReadRsp)
}

::google::protobuf::uint8* XmsgImHlrEventSysReadRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrEventSysReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventSysReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrEventSysReadRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrEventSysReadRsp)
  return target;
}

size_t XmsgImHlrEventSysReadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrEventSysReadRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrEventSysReadRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrEventSysReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrEventSysReadRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrEventSysReadRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrEventSysReadRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrEventSysReadRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrEventSysReadRsp::MergeFrom(const XmsgImHlrEventSysReadRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrEventSysReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrEventSysReadRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrEventSysReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrEventSysReadRsp::CopyFrom(const XmsgImHlrEventSysReadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrEventSysReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrEventSysReadRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrEventSysReadRsp::Swap(XmsgImHlrEventSysReadRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrEventSysReadRsp::InternalSwap(XmsgImHlrEventSysReadRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrEventSysReadRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
