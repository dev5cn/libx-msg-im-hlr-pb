// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-hlr-usr-event.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImHlrEventUsrSubReqImpl();
void InitDefaultsXmsgImHlrEventUsrSubReq();
void InitDefaultsXmsgImHlrEventUsrSubRspImpl();
void InitDefaultsXmsgImHlrEventUsrSubRsp();
void InitDefaultsXmsgImHlrEventSysSubReqImpl();
void InitDefaultsXmsgImHlrEventSysSubReq();
void InitDefaultsXmsgImHlrEventSysSubRspImpl();
void InitDefaultsXmsgImHlrEventSysSubRsp();
void InitDefaultsXmsgImHlrEventUsrNoticeImpl();
void InitDefaultsXmsgImHlrEventUsrNotice();
void InitDefaultsXmsgImHlrEventSysNoticeImpl();
void InitDefaultsXmsgImHlrEventSysNotice();
void InitDefaultsXmsgImHlrEventUsrReadReqImpl();
void InitDefaultsXmsgImHlrEventUsrReadReq();
void InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrEventUsrReadRspImpl();
void InitDefaultsXmsgImHlrEventUsrReadRsp();
void InitDefaultsXmsgImHlrEventSysReadReqImpl();
void InitDefaultsXmsgImHlrEventSysReadReq();
void InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrEventSysReadRspImpl();
void InitDefaultsXmsgImHlrEventSysReadRsp();
inline void InitDefaults() {
  InitDefaultsXmsgImHlrEventUsrSubReq();
  InitDefaultsXmsgImHlrEventUsrSubRsp();
  InitDefaultsXmsgImHlrEventSysSubReq();
  InitDefaultsXmsgImHlrEventSysSubRsp();
  InitDefaultsXmsgImHlrEventUsrNotice();
  InitDefaultsXmsgImHlrEventSysNotice();
  InitDefaultsXmsgImHlrEventUsrReadReq();
  InitDefaultsXmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrEventUsrReadRsp();
  InitDefaultsXmsgImHlrEventSysReadReq();
  InitDefaultsXmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrEventSysReadRsp();
}
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto
class XmsgImHlrEventSysNotice;
class XmsgImHlrEventSysNoticeDefaultTypeInternal;
extern XmsgImHlrEventSysNoticeDefaultTypeInternal _XmsgImHlrEventSysNotice_default_instance_;
class XmsgImHlrEventSysReadReq;
class XmsgImHlrEventSysReadReqDefaultTypeInternal;
extern XmsgImHlrEventSysReadReqDefaultTypeInternal _XmsgImHlrEventSysReadReq_default_instance_;
class XmsgImHlrEventSysReadRsp;
class XmsgImHlrEventSysReadRspDefaultTypeInternal;
extern XmsgImHlrEventSysReadRspDefaultTypeInternal _XmsgImHlrEventSysReadRsp_default_instance_;
class XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse;
class XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrEventSysSubReq;
class XmsgImHlrEventSysSubReqDefaultTypeInternal;
extern XmsgImHlrEventSysSubReqDefaultTypeInternal _XmsgImHlrEventSysSubReq_default_instance_;
class XmsgImHlrEventSysSubRsp;
class XmsgImHlrEventSysSubRspDefaultTypeInternal;
extern XmsgImHlrEventSysSubRspDefaultTypeInternal _XmsgImHlrEventSysSubRsp_default_instance_;
class XmsgImHlrEventUsrNotice;
class XmsgImHlrEventUsrNoticeDefaultTypeInternal;
extern XmsgImHlrEventUsrNoticeDefaultTypeInternal _XmsgImHlrEventUsrNotice_default_instance_;
class XmsgImHlrEventUsrReadReq;
class XmsgImHlrEventUsrReadReqDefaultTypeInternal;
extern XmsgImHlrEventUsrReadReqDefaultTypeInternal _XmsgImHlrEventUsrReadReq_default_instance_;
class XmsgImHlrEventUsrReadRsp;
class XmsgImHlrEventUsrReadRspDefaultTypeInternal;
extern XmsgImHlrEventUsrReadRspDefaultTypeInternal _XmsgImHlrEventUsrReadRsp_default_instance_;
class XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse;
class XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrEventUsrSubReq;
class XmsgImHlrEventUsrSubReqDefaultTypeInternal;
extern XmsgImHlrEventUsrSubReqDefaultTypeInternal _XmsgImHlrEventUsrSubReq_default_instance_;
class XmsgImHlrEventUsrSubRsp;
class XmsgImHlrEventUsrSubRspDefaultTypeInternal;
extern XmsgImHlrEventUsrSubRspDefaultTypeInternal _XmsgImHlrEventUsrSubRsp_default_instance_;

// ===================================================================

class XmsgImHlrEventUsrSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventUsrSubReq) */ {
 public:
  XmsgImHlrEventUsrSubReq();
  virtual ~XmsgImHlrEventUsrSubReq();

  XmsgImHlrEventUsrSubReq(const XmsgImHlrEventUsrSubReq& from);

  inline XmsgImHlrEventUsrSubReq& operator=(const XmsgImHlrEventUsrSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventUsrSubReq(XmsgImHlrEventUsrSubReq&& from) noexcept
    : XmsgImHlrEventUsrSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventUsrSubReq& operator=(XmsgImHlrEventUsrSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventUsrSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventUsrSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventUsrSubReq*>(
               &_XmsgImHlrEventUsrSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImHlrEventUsrSubReq* other);
  friend void swap(XmsgImHlrEventUsrSubReq& a, XmsgImHlrEventUsrSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventUsrSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventUsrSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventUsrSubReq& from);
  void MergeFrom(const XmsgImHlrEventUsrSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventUsrSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventUsrSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventUsrSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventUsrSubRsp) */ {
 public:
  XmsgImHlrEventUsrSubRsp();
  virtual ~XmsgImHlrEventUsrSubRsp();

  XmsgImHlrEventUsrSubRsp(const XmsgImHlrEventUsrSubRsp& from);

  inline XmsgImHlrEventUsrSubRsp& operator=(const XmsgImHlrEventUsrSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventUsrSubRsp(XmsgImHlrEventUsrSubRsp&& from) noexcept
    : XmsgImHlrEventUsrSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventUsrSubRsp& operator=(XmsgImHlrEventUsrSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventUsrSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventUsrSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventUsrSubRsp*>(
               &_XmsgImHlrEventUsrSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImHlrEventUsrSubRsp* other);
  friend void swap(XmsgImHlrEventUsrSubRsp& a, XmsgImHlrEventUsrSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventUsrSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventUsrSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventUsrSubRsp& from);
  void MergeFrom(const XmsgImHlrEventUsrSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventUsrSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 latestVer = 1;
  void clear_latestver();
  static const int kLatestVerFieldNumber = 1;
  ::google::protobuf::uint64 latestver() const;
  void set_latestver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventUsrSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 latestver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventSysSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventSysSubReq) */ {
 public:
  XmsgImHlrEventSysSubReq();
  virtual ~XmsgImHlrEventSysSubReq();

  XmsgImHlrEventSysSubReq(const XmsgImHlrEventSysSubReq& from);

  inline XmsgImHlrEventSysSubReq& operator=(const XmsgImHlrEventSysSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventSysSubReq(XmsgImHlrEventSysSubReq&& from) noexcept
    : XmsgImHlrEventSysSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventSysSubReq& operator=(XmsgImHlrEventSysSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventSysSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventSysSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventSysSubReq*>(
               &_XmsgImHlrEventSysSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgImHlrEventSysSubReq* other);
  friend void swap(XmsgImHlrEventSysSubReq& a, XmsgImHlrEventSysSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventSysSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventSysSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventSysSubReq& from);
  void MergeFrom(const XmsgImHlrEventSysSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventSysSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventSysSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventSysSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventSysSubRsp) */ {
 public:
  XmsgImHlrEventSysSubRsp();
  virtual ~XmsgImHlrEventSysSubRsp();

  XmsgImHlrEventSysSubRsp(const XmsgImHlrEventSysSubRsp& from);

  inline XmsgImHlrEventSysSubRsp& operator=(const XmsgImHlrEventSysSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventSysSubRsp(XmsgImHlrEventSysSubRsp&& from) noexcept
    : XmsgImHlrEventSysSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventSysSubRsp& operator=(XmsgImHlrEventSysSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventSysSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventSysSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventSysSubRsp*>(
               &_XmsgImHlrEventSysSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImHlrEventSysSubRsp* other);
  friend void swap(XmsgImHlrEventSysSubRsp& a, XmsgImHlrEventSysSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventSysSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventSysSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventSysSubRsp& from);
  void MergeFrom(const XmsgImHlrEventSysSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventSysSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 latestVer = 1;
  void clear_latestver();
  static const int kLatestVerFieldNumber = 1;
  ::google::protobuf::uint64 latestver() const;
  void set_latestver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventSysSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 latestver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventUsrNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventUsrNotice) */ {
 public:
  XmsgImHlrEventUsrNotice();
  virtual ~XmsgImHlrEventUsrNotice();

  XmsgImHlrEventUsrNotice(const XmsgImHlrEventUsrNotice& from);

  inline XmsgImHlrEventUsrNotice& operator=(const XmsgImHlrEventUsrNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventUsrNotice(XmsgImHlrEventUsrNotice&& from) noexcept
    : XmsgImHlrEventUsrNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventUsrNotice& operator=(XmsgImHlrEventUsrNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventUsrNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventUsrNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventUsrNotice*>(
               &_XmsgImHlrEventUsrNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImHlrEventUsrNotice* other);
  friend void swap(XmsgImHlrEventUsrNotice& a, XmsgImHlrEventUsrNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventUsrNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventUsrNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventUsrNotice& from);
  void MergeFrom(const XmsgImHlrEventUsrNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventUsrNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 2;
  void clear_dat();
  static const int kDatFieldNumber = 2;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint64 ver = 3;
  void clear_ver();
  static const int kVerFieldNumber = 3;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventUsrNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventSysNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventSysNotice) */ {
 public:
  XmsgImHlrEventSysNotice();
  virtual ~XmsgImHlrEventSysNotice();

  XmsgImHlrEventSysNotice(const XmsgImHlrEventSysNotice& from);

  inline XmsgImHlrEventSysNotice& operator=(const XmsgImHlrEventSysNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventSysNotice(XmsgImHlrEventSysNotice&& from) noexcept
    : XmsgImHlrEventSysNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventSysNotice& operator=(XmsgImHlrEventSysNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventSysNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventSysNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventSysNotice*>(
               &_XmsgImHlrEventSysNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImHlrEventSysNotice* other);
  friend void swap(XmsgImHlrEventSysNotice& a, XmsgImHlrEventSysNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventSysNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventSysNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventSysNotice& from);
  void MergeFrom(const XmsgImHlrEventSysNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventSysNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 2;
  void clear_dat();
  static const int kDatFieldNumber = 2;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint64 ver = 3;
  void clear_ver();
  static const int kVerFieldNumber = 3;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventSysNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint64 ver_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventUsrReadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventUsrReadReq) */ {
 public:
  XmsgImHlrEventUsrReadReq();
  virtual ~XmsgImHlrEventUsrReadReq();

  XmsgImHlrEventUsrReadReq(const XmsgImHlrEventUsrReadReq& from);

  inline XmsgImHlrEventUsrReadReq& operator=(const XmsgImHlrEventUsrReadReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventUsrReadReq(XmsgImHlrEventUsrReadReq&& from) noexcept
    : XmsgImHlrEventUsrReadReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventUsrReadReq& operator=(XmsgImHlrEventUsrReadReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventUsrReadReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventUsrReadReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventUsrReadReq*>(
               &_XmsgImHlrEventUsrReadReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImHlrEventUsrReadReq* other);
  friend void swap(XmsgImHlrEventUsrReadReq& a, XmsgImHlrEventUsrReadReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventUsrReadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventUsrReadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventUsrReadReq& from);
  void MergeFrom(const XmsgImHlrEventUsrReadReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventUsrReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventUsrReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse();
  XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrEventUsrReadRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventUsrReadRsp) */ {
 public:
  XmsgImHlrEventUsrReadRsp();
  virtual ~XmsgImHlrEventUsrReadRsp();

  XmsgImHlrEventUsrReadRsp(const XmsgImHlrEventUsrReadRsp& from);

  inline XmsgImHlrEventUsrReadRsp& operator=(const XmsgImHlrEventUsrReadRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventUsrReadRsp(XmsgImHlrEventUsrReadRsp&& from) noexcept
    : XmsgImHlrEventUsrReadRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventUsrReadRsp& operator=(XmsgImHlrEventUsrReadRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventUsrReadRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventUsrReadRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventUsrReadRsp*>(
               &_XmsgImHlrEventUsrReadRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImHlrEventUsrReadRsp* other);
  friend void swap(XmsgImHlrEventUsrReadRsp& a, XmsgImHlrEventUsrReadRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventUsrReadRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventUsrReadRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventUsrReadRsp& from);
  void MergeFrom(const XmsgImHlrEventUsrReadRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventUsrReadRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventUsrReadRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrEventUsrReadRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventUsrReadRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventSysReadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventSysReadReq) */ {
 public:
  XmsgImHlrEventSysReadReq();
  virtual ~XmsgImHlrEventSysReadReq();

  XmsgImHlrEventSysReadReq(const XmsgImHlrEventSysReadReq& from);

  inline XmsgImHlrEventSysReadReq& operator=(const XmsgImHlrEventSysReadReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventSysReadReq(XmsgImHlrEventSysReadReq&& from) noexcept
    : XmsgImHlrEventSysReadReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventSysReadReq& operator=(XmsgImHlrEventSysReadReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventSysReadReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventSysReadReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventSysReadReq*>(
               &_XmsgImHlrEventSysReadReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImHlrEventSysReadReq* other);
  friend void swap(XmsgImHlrEventSysReadReq& a, XmsgImHlrEventSysReadReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventSysReadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventSysReadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventSysReadReq& from);
  void MergeFrom(const XmsgImHlrEventSysReadReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventSysReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventSysReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse();
  XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrEventSysReadRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrEventSysReadRsp) */ {
 public:
  XmsgImHlrEventSysReadRsp();
  virtual ~XmsgImHlrEventSysReadRsp();

  XmsgImHlrEventSysReadRsp(const XmsgImHlrEventSysReadRsp& from);

  inline XmsgImHlrEventSysReadRsp& operator=(const XmsgImHlrEventSysReadRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrEventSysReadRsp(XmsgImHlrEventSysReadRsp&& from) noexcept
    : XmsgImHlrEventSysReadRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrEventSysReadRsp& operator=(XmsgImHlrEventSysReadRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrEventSysReadRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrEventSysReadRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrEventSysReadRsp*>(
               &_XmsgImHlrEventSysReadRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgImHlrEventSysReadRsp* other);
  friend void swap(XmsgImHlrEventSysReadRsp& a, XmsgImHlrEventSysReadRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrEventSysReadRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrEventSysReadRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrEventSysReadRsp& from);
  void MergeFrom(const XmsgImHlrEventSysReadRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrEventSysReadRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrEventSysReadRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrEventSysReadRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto::InitDefaultsXmsgImHlrEventSysReadRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImHlrEventUsrSubReq

// uint64 ver = 1;
inline void XmsgImHlrEventUsrSubReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventUsrSubReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrSubReq.ver)
  return ver_;
}
inline void XmsgImHlrEventUsrSubReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrSubReq.ver)
}

// -------------------------------------------------------------------

// XmsgImHlrEventUsrSubRsp

// uint64 latestVer = 1;
inline void XmsgImHlrEventUsrSubRsp::clear_latestver() {
  latestver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventUsrSubRsp::latestver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrSubRsp.latestVer)
  return latestver_;
}
inline void XmsgImHlrEventUsrSubRsp::set_latestver(::google::protobuf::uint64 value) {
  
  latestver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrSubRsp.latestVer)
}

// -------------------------------------------------------------------

// XmsgImHlrEventSysSubReq

// uint64 ver = 1;
inline void XmsgImHlrEventSysSubReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventSysSubReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysSubReq.ver)
  return ver_;
}
inline void XmsgImHlrEventSysSubReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysSubReq.ver)
}

// -------------------------------------------------------------------

// XmsgImHlrEventSysSubRsp

// uint64 latestVer = 1;
inline void XmsgImHlrEventSysSubRsp::clear_latestver() {
  latestver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventSysSubRsp::latestver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysSubRsp.latestVer)
  return latestver_;
}
inline void XmsgImHlrEventSysSubRsp::set_latestver(::google::protobuf::uint64 value) {
  
  latestver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysSubRsp.latestVer)
}

// -------------------------------------------------------------------

// XmsgImHlrEventUsrNotice

// string msg = 1;
inline void XmsgImHlrEventUsrNotice::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrEventUsrNotice::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrNotice.msg)
  return msg_.GetNoArena();
}
inline void XmsgImHlrEventUsrNotice::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrNotice.msg)
}
#if LANG_CXX11
inline void XmsgImHlrEventUsrNotice::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrEventUsrNotice.msg)
}
#endif
inline void XmsgImHlrEventUsrNotice::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrEventUsrNotice.msg)
}
inline void XmsgImHlrEventUsrNotice::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrEventUsrNotice.msg)
}
inline ::std::string* XmsgImHlrEventUsrNotice::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrEventUsrNotice.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrEventUsrNotice::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImHlrEventUsrNotice.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrEventUsrNotice::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrEventUsrNotice.msg)
}

// bytes dat = 2;
inline void XmsgImHlrEventUsrNotice::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrEventUsrNotice::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrNotice.dat)
  return dat_.GetNoArena();
}
inline void XmsgImHlrEventUsrNotice::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrNotice.dat)
}
#if LANG_CXX11
inline void XmsgImHlrEventUsrNotice::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrEventUsrNotice.dat)
}
#endif
inline void XmsgImHlrEventUsrNotice::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrEventUsrNotice.dat)
}
inline void XmsgImHlrEventUsrNotice::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrEventUsrNotice.dat)
}
inline ::std::string* XmsgImHlrEventUsrNotice::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrEventUsrNotice.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrEventUsrNotice::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImHlrEventUsrNotice.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrEventUsrNotice::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrEventUsrNotice.dat)
}

// uint64 ver = 3;
inline void XmsgImHlrEventUsrNotice::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventUsrNotice::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrNotice.ver)
  return ver_;
}
inline void XmsgImHlrEventUsrNotice::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrNotice.ver)
}

// uint64 gts = 4;
inline void XmsgImHlrEventUsrNotice::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventUsrNotice::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrNotice.gts)
  return gts_;
}
inline void XmsgImHlrEventUsrNotice::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrNotice.gts)
}

// -------------------------------------------------------------------

// XmsgImHlrEventSysNotice

// string msg = 1;
inline void XmsgImHlrEventSysNotice::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrEventSysNotice::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysNotice.msg)
  return msg_.GetNoArena();
}
inline void XmsgImHlrEventSysNotice::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysNotice.msg)
}
#if LANG_CXX11
inline void XmsgImHlrEventSysNotice::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrEventSysNotice.msg)
}
#endif
inline void XmsgImHlrEventSysNotice::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrEventSysNotice.msg)
}
inline void XmsgImHlrEventSysNotice::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrEventSysNotice.msg)
}
inline ::std::string* XmsgImHlrEventSysNotice::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrEventSysNotice.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrEventSysNotice::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImHlrEventSysNotice.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrEventSysNotice::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrEventSysNotice.msg)
}

// bytes dat = 2;
inline void XmsgImHlrEventSysNotice::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrEventSysNotice::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysNotice.dat)
  return dat_.GetNoArena();
}
inline void XmsgImHlrEventSysNotice::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysNotice.dat)
}
#if LANG_CXX11
inline void XmsgImHlrEventSysNotice::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrEventSysNotice.dat)
}
#endif
inline void XmsgImHlrEventSysNotice::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrEventSysNotice.dat)
}
inline void XmsgImHlrEventSysNotice::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrEventSysNotice.dat)
}
inline ::std::string* XmsgImHlrEventSysNotice::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrEventSysNotice.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrEventSysNotice::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImHlrEventSysNotice.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrEventSysNotice::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrEventSysNotice.dat)
}

// uint64 ver = 3;
inline void XmsgImHlrEventSysNotice::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventSysNotice::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysNotice.ver)
  return ver_;
}
inline void XmsgImHlrEventSysNotice::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysNotice.ver)
}

// uint64 gts = 4;
inline void XmsgImHlrEventSysNotice::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventSysNotice::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysNotice.gts)
  return gts_;
}
inline void XmsgImHlrEventSysNotice::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysNotice.gts)
}

// -------------------------------------------------------------------

// XmsgImHlrEventUsrReadReq

// uint64 ver = 1;
inline void XmsgImHlrEventUsrReadReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventUsrReadReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventUsrReadReq.ver)
  return ver_;
}
inline void XmsgImHlrEventUsrReadReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventUsrReadReq.ver)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrEventUsrReadRsp

// map<string, string> ext = 1;
inline int XmsgImHlrEventUsrReadRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrEventUsrReadRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrEventUsrReadRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrEventUsrReadRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrEventUsrReadRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrEventUsrReadRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImHlrEventSysReadReq

// uint64 ver = 1;
inline void XmsgImHlrEventSysReadReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrEventSysReadReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrEventSysReadReq.ver)
  return ver_;
}
inline void XmsgImHlrEventSysReadReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrEventSysReadReq.ver)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrEventSysReadRsp

// map<string, string> ext = 1;
inline int XmsgImHlrEventSysReadRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrEventSysReadRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrEventSysReadRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrEventSysReadRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrEventSysReadRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrEventSysReadRsp.ext)
  return ext_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dim_2dhlr_2dusr_2devent_2eproto__INCLUDED
